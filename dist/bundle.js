/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./scripts/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./scripts/index.js":
/*!**************************!*\
  !*** ./scripts/index.js ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.svg = exports.parseTime = exports.formatTime = exports.water_stress_levels_opt = exports.water_stress_levels_pst = exports.water_stress_levels_bau = exports.water_stress_levels = exports.total_water_used = exports.total_available_water = exports.total_external_water = exports.total_internal_water = undefined;\nexports.showLineChart = showLineChart;\nexports.showMap = showMap;\nexports.getAllValuesForCountry = getAllValuesForCountry;\n\nvar _map = __webpack_require__(/*! ./map */ \"./scripts/map.js\");\n\nvar _slider = __webpack_require__(/*! ./slider */ \"./scripts/slider.js\");\n\nvar _variables = __webpack_require__(/*! ./variables */ \"./scripts/variables.js\");\n\nvar _line_chart = __webpack_require__(/*! ./line_chart */ \"./scripts/line_chart.js\");\n\nvar total_internal_water = exports.total_internal_water = new Map();\nvar total_external_water = exports.total_external_water = new Map();\nvar total_available_water = exports.total_available_water = new Map();\nvar total_water_used = exports.total_water_used = new Map();\nvar water_stress_levels = exports.water_stress_levels = new Map();\n\nvar water_stress_levels_bau = exports.water_stress_levels_bau = new Map();\nvar water_stress_levels_pst = exports.water_stress_levels_pst = new Map();\nvar water_stress_levels_opt = exports.water_stress_levels_opt = new Map();\n\nvar formatTime = exports.formatTime = d3.timeFormat(\"%Y\");\nvar parseTime = exports.parseTime = d3.timeParse(\"%Y\");\n\n//TODO change this and add proper padding\nvar svg = exports.svg = d3.select(\"body\").append(\"svg\").attr('width', _variables.width + 150).attr('height', _variables.height + 50);\n\nfunction showLineChart() {\n    d3.select('svg').select('#map').transition().duration(1000).style('display', 'none');\n    d3.select('svg').select('#slider').transition().duration(1000).style('display', 'none');\n    d3.select('g').select('#line_chart').transition().duration(1000).style('display', 'visibile');\n}\n\nfunction showMap() {\n    d3.select('svg').select('#map').transition().duration(1000).style('display', 'visibile');\n    d3.select('svg').select('#slider').transition().duration(1000).style('display', 'visibile');\n    d3.select('g').select('#line_chart').transition().duration(1000).style('display', 'none');\n}\n\nfunction getAllValuesForCountry(country) {\n    var values = [];\n    water_stress_levels.forEach(function (value, key) {\n        if (value[country] !== -1) values.push({ date: key.substring(0, 4), value: value[country] });\n    });\n    return { id: country, values: values };\n}\n\n// const back2Map_button = lineGraph_group.append(\"rect\")\n//     .attr(\"class\", \"back2Map_button\")\n//     .attr(\"transform\", \"translate(\" + 1100 + \",\" + 0 + \")\")\n//     .attr('width', 100)\n//     .attr('height', 50)\n//     .attr('fill', 'lightblue')\n//     .on('click', function () {\n//         // toggle visibility\n//         d3.select('svg').select('#map').transition().duration(1000).style('display', 'block');\n//         d3.select('svg').select('#slider').transition().duration(1000).style('display', 'block');\n//         lineGraph_group.attr('visibility', 'hidden');\n//     });\n\nfunction loadDataset(map, file, func) {\n    return new Promise(function (resolve, reject) {\n        d3.csv(file, function (data) {\n            data.forEach(function (d) {\n                var values = {};\n                Object.keys(d).forEach(function (key) {\n                    if (key !== 'Year') {\n                        if (d[key] === \"\") values[key] = -1;else values[key] = func(+d[key]);\n                    }\n                });\n                map.set(d.Year, values);\n            });\n            resolve();\n        });\n    });\n}\n\nPromise.all([loadDataset(water_stress_levels, './Data/water_stress_levels.csv', function (val) {\n    return val / 100 * 5;\n}), loadDataset(total_external_water, './Data/external_water.csv', function (val) {\n    return val;\n}), loadDataset(total_internal_water, './Data/internal_water.csv', function (val) {\n    return val;\n}), loadDataset(total_water_used, './Data/water_withdraws.csv', function (val) {\n    return val;\n}), loadDataset(water_stress_levels_bau, './Data/bau_predictions.csv', function (val) {\n    return val;\n}), loadDataset(water_stress_levels_opt, './Data/opt_predictions.csv', function (val) {\n    return val;\n}), loadDataset(water_stress_levels_pst, './Data/pst_predictions.csv', function (val) {\n    return val;\n})]).then(function (values) {\n    // renderMap(water_stress_levels.get('1978-1982'));\n    // createSlider();\n    console.log(water_stress_levels_pst);\n    console.log(water_stress_levels_bau);\n    console.log(water_stress_levels_opt);\n    console.log(water_stress_levels);\n    (0, _line_chart.renderLineChart)(\"China\");\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zY3JpcHRzL2luZGV4LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vL3NjcmlwdHMvaW5kZXguanM/NDMwNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge3JlbmRlck1hcH0gZnJvbSBcIi4vbWFwXCI7XG5pbXBvcnQge2NyZWF0ZVNsaWRlcn0gZnJvbSBcIi4vc2xpZGVyXCI7XG5pbXBvcnQge3dpZHRoLCBoZWlnaHR9IGZyb20gXCIuL3ZhcmlhYmxlc1wiO1xuaW1wb3J0IHtyZW5kZXJMaW5lQ2hhcnR9IGZyb20gXCIuL2xpbmVfY2hhcnRcIjtcblxuZXhwb3J0IGxldCB0b3RhbF9pbnRlcm5hbF93YXRlciA9IG5ldyBNYXAoKTtcbmV4cG9ydCBsZXQgdG90YWxfZXh0ZXJuYWxfd2F0ZXIgPSBuZXcgTWFwKCk7XG5leHBvcnQgbGV0IHRvdGFsX2F2YWlsYWJsZV93YXRlciA9IG5ldyBNYXAoKTtcbmV4cG9ydCBsZXQgdG90YWxfd2F0ZXJfdXNlZCA9IG5ldyBNYXAoKTtcbmV4cG9ydCBsZXQgd2F0ZXJfc3RyZXNzX2xldmVscyA9IG5ldyBNYXAoKTtcblxuZXhwb3J0IGxldCB3YXRlcl9zdHJlc3NfbGV2ZWxzX2JhdSA9IG5ldyBNYXAoKTtcbmV4cG9ydCBsZXQgd2F0ZXJfc3RyZXNzX2xldmVsc19wc3QgPSBuZXcgTWFwKCk7XG5leHBvcnQgbGV0IHdhdGVyX3N0cmVzc19sZXZlbHNfb3B0ID0gbmV3IE1hcCgpO1xuXG5leHBvcnQgY29uc3QgZm9ybWF0VGltZSA9IGQzLnRpbWVGb3JtYXQoXCIlWVwiKTtcbmV4cG9ydCBjb25zdCBwYXJzZVRpbWUgPSBkMy50aW1lUGFyc2UoXCIlWVwiKTtcblxuXG4vL1RPRE8gY2hhbmdlIHRoaXMgYW5kIGFkZCBwcm9wZXIgcGFkZGluZ1xuZXhwb3J0IGNvbnN0IHN2ZyA9IGQzLnNlbGVjdChcImJvZHlcIikuYXBwZW5kKFwic3ZnXCIpXG4gICAgLmF0dHIoJ3dpZHRoJywgd2lkdGggKyAxNTApXG4gICAgLmF0dHIoJ2hlaWdodCcsIGhlaWdodCArIDUwKTtcblxuZXhwb3J0IGZ1bmN0aW9uIHNob3dMaW5lQ2hhcnQoKSB7XG4gICAgZDMuc2VsZWN0KCdzdmcnKS5zZWxlY3QoJyNtYXAnKS50cmFuc2l0aW9uKCkuZHVyYXRpb24oMTAwMCkuc3R5bGUoJ2Rpc3BsYXknLCAnbm9uZScpO1xuICAgIGQzLnNlbGVjdCgnc3ZnJykuc2VsZWN0KCcjc2xpZGVyJykudHJhbnNpdGlvbigpLmR1cmF0aW9uKDEwMDApLnN0eWxlKCdkaXNwbGF5JywgJ25vbmUnKTtcbiAgICBkMy5zZWxlY3QoJ2cnKS5zZWxlY3QoJyNsaW5lX2NoYXJ0JykudHJhbnNpdGlvbigpLmR1cmF0aW9uKDEwMDApLnN0eWxlKCdkaXNwbGF5JywgJ3Zpc2liaWxlJyk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzaG93TWFwKCkge1xuICAgIGQzLnNlbGVjdCgnc3ZnJykuc2VsZWN0KCcjbWFwJykudHJhbnNpdGlvbigpLmR1cmF0aW9uKDEwMDApLnN0eWxlKCdkaXNwbGF5JywgJ3Zpc2liaWxlJyk7XG4gICAgZDMuc2VsZWN0KCdzdmcnKS5zZWxlY3QoJyNzbGlkZXInKS50cmFuc2l0aW9uKCkuZHVyYXRpb24oMTAwMCkuc3R5bGUoJ2Rpc3BsYXknLCAndmlzaWJpbGUnKTtcbiAgICBkMy5zZWxlY3QoJ2cnKS5zZWxlY3QoJyNsaW5lX2NoYXJ0JykudHJhbnNpdGlvbigpLmR1cmF0aW9uKDEwMDApLnN0eWxlKCdkaXNwbGF5JywgJ25vbmUnKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldEFsbFZhbHVlc0ZvckNvdW50cnkoY291bnRyeSkge1xuICAgIGxldCB2YWx1ZXMgPSBbXTtcbiAgICB3YXRlcl9zdHJlc3NfbGV2ZWxzLmZvckVhY2goZnVuY3Rpb24gKHZhbHVlLCBrZXkpIHtcbiAgICAgICAgaWYodmFsdWVbY291bnRyeV0gIT09IC0xKVxuICAgICAgICAgICAgdmFsdWVzLnB1c2goe2RhdGU6a2V5LnN1YnN0cmluZygwLDQpLCB2YWx1ZTp2YWx1ZVtjb3VudHJ5XX0pO1xuICAgIH0pO1xuICAgIHJldHVybiB7aWQ6Y291bnRyeSwgdmFsdWVzOnZhbHVlc31cbn1cblxuLy8gY29uc3QgYmFjazJNYXBfYnV0dG9uID0gbGluZUdyYXBoX2dyb3VwLmFwcGVuZChcInJlY3RcIilcbi8vICAgICAuYXR0cihcImNsYXNzXCIsIFwiYmFjazJNYXBfYnV0dG9uXCIpXG4vLyAgICAgLmF0dHIoXCJ0cmFuc2Zvcm1cIiwgXCJ0cmFuc2xhdGUoXCIgKyAxMTAwICsgXCIsXCIgKyAwICsgXCIpXCIpXG4vLyAgICAgLmF0dHIoJ3dpZHRoJywgMTAwKVxuLy8gICAgIC5hdHRyKCdoZWlnaHQnLCA1MClcbi8vICAgICAuYXR0cignZmlsbCcsICdsaWdodGJsdWUnKVxuLy8gICAgIC5vbignY2xpY2snLCBmdW5jdGlvbiAoKSB7XG4vLyAgICAgICAgIC8vIHRvZ2dsZSB2aXNpYmlsaXR5XG4vLyAgICAgICAgIGQzLnNlbGVjdCgnc3ZnJykuc2VsZWN0KCcjbWFwJykudHJhbnNpdGlvbigpLmR1cmF0aW9uKDEwMDApLnN0eWxlKCdkaXNwbGF5JywgJ2Jsb2NrJyk7XG4vLyAgICAgICAgIGQzLnNlbGVjdCgnc3ZnJykuc2VsZWN0KCcjc2xpZGVyJykudHJhbnNpdGlvbigpLmR1cmF0aW9uKDEwMDApLnN0eWxlKCdkaXNwbGF5JywgJ2Jsb2NrJyk7XG4vLyAgICAgICAgIGxpbmVHcmFwaF9ncm91cC5hdHRyKCd2aXNpYmlsaXR5JywgJ2hpZGRlbicpO1xuLy8gICAgIH0pO1xuXG5mdW5jdGlvbiBsb2FkRGF0YXNldChtYXAsIGZpbGUsIGZ1bmMpIHtcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgICBkMy5jc3YoZmlsZSwgZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgICAgICAgIGRhdGEuZm9yRWFjaChmdW5jdGlvbiAoZCkge1xuICAgICAgICAgICAgICAgIGxldCB2YWx1ZXMgPSB7fTtcbiAgICAgICAgICAgICAgICBPYmplY3Qua2V5cyhkKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGtleSAhPT0gJ1llYXInKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZihkW2tleV0gPT09IFwiXCIpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWVzW2tleV0gPSAtMTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2VcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZXNba2V5XSA9IGZ1bmMoK2Rba2V5XSlcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIG1hcC5zZXQoZC5ZZWFyLCB2YWx1ZXMpXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHJlc29sdmUoKTtcbiAgICAgICAgfSk7XG4gICAgfSk7XG59XG5cblByb21pc2UuYWxsKFtcbiAgICBsb2FkRGF0YXNldCh3YXRlcl9zdHJlc3NfbGV2ZWxzLCAnLi9EYXRhL3dhdGVyX3N0cmVzc19sZXZlbHMuY3N2JywgZnVuY3Rpb24gKHZhbCkge1xuICAgICAgICByZXR1cm4gKCh2YWwgLyAxMDApICogNSlcbiAgICB9KSxcbiAgICBsb2FkRGF0YXNldCh0b3RhbF9leHRlcm5hbF93YXRlciwgJy4vRGF0YS9leHRlcm5hbF93YXRlci5jc3YnLCBmdW5jdGlvbiAodmFsKSB7XG4gICAgICAgIHJldHVybiB2YWxcbiAgICB9KSxcbiAgICBsb2FkRGF0YXNldCh0b3RhbF9pbnRlcm5hbF93YXRlciwgJy4vRGF0YS9pbnRlcm5hbF93YXRlci5jc3YnLCBmdW5jdGlvbiAodmFsKSB7XG4gICAgICAgIHJldHVybiB2YWxcbiAgICB9KSxcbiAgICBsb2FkRGF0YXNldCh0b3RhbF93YXRlcl91c2VkLCAnLi9EYXRhL3dhdGVyX3dpdGhkcmF3cy5jc3YnLCBmdW5jdGlvbiAodmFsKSB7XG4gICAgICAgIHJldHVybiB2YWxcbiAgICB9KSxcbiAgICBsb2FkRGF0YXNldCh3YXRlcl9zdHJlc3NfbGV2ZWxzX2JhdSwgJy4vRGF0YS9iYXVfcHJlZGljdGlvbnMuY3N2JywgZnVuY3Rpb24gKHZhbCkge1xuICAgICAgICByZXR1cm4gdmFsXG4gICAgfSksXG4gICAgbG9hZERhdGFzZXQod2F0ZXJfc3RyZXNzX2xldmVsc19vcHQsICcuL0RhdGEvb3B0X3ByZWRpY3Rpb25zLmNzdicsIGZ1bmN0aW9uICh2YWwpIHtcbiAgICAgICAgcmV0dXJuIHZhbFxuICAgIH0pLFxuICAgIGxvYWREYXRhc2V0KHdhdGVyX3N0cmVzc19sZXZlbHNfcHN0LCAnLi9EYXRhL3BzdF9wcmVkaWN0aW9ucy5jc3YnLCBmdW5jdGlvbiAodmFsKSB7XG4gICAgICAgIHJldHVybiB2YWxcbiAgICB9KSxcbl0pLnRoZW4odmFsdWVzID0+IHtcbiAgICAvLyByZW5kZXJNYXAod2F0ZXJfc3RyZXNzX2xldmVscy5nZXQoJzE5NzgtMTk4MicpKTtcbiAgICAvLyBjcmVhdGVTbGlkZXIoKTtcbiAgICBjb25zb2xlLmxvZyh3YXRlcl9zdHJlc3NfbGV2ZWxzX3BzdCk7XG4gICAgY29uc29sZS5sb2cod2F0ZXJfc3RyZXNzX2xldmVsc19iYXUpO1xuICAgIGNvbnNvbGUubG9nKHdhdGVyX3N0cmVzc19sZXZlbHNfb3B0KTtcbiAgICBjb25zb2xlLmxvZyh3YXRlcl9zdHJlc3NfbGV2ZWxzKTtcbiAgICByZW5kZXJMaW5lQ2hhcnQoXCJDaGluYVwiKTtcbn0pO1xuXG5cbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBd0JBO0FBTUE7QUFNQTtBQUNBO0FBckNBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./scripts/index.js\n");

/***/ }),

/***/ "./scripts/line_chart.js":
/*!*******************************!*\
  !*** ./scripts/line_chart.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.renderLineChart = renderLineChart;\n\nvar _index = __webpack_require__(/*! ./index */ \"./scripts/index.js\");\n\nvar utils = _interopRequireWildcard(_index);\n\nvar _variables = __webpack_require__(/*! ./variables */ \"./scripts/variables.js\");\n\nvar _map = __webpack_require__(/*! ./map */ \"./scripts/map.js\");\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n//Sets axis scales\nvar x = d3.scaleTime().range([0, _variables.width - 100]),\n    y = d3.scaleLinear().range([_variables.height, 0]),\n    z = d3.scaleOrdinal(d3.schemeCategory10);\n\n//Line generator, where the lives are curved\nvar line = d3.line().curve(d3.curveBasis).x(function (d) {\n    return x(new Date(d.date));\n}).y(function (d) {\n    return y(d.value);\n});\n\nfunction make_x_gridlines() {\n    return d3.axisBottom(x).ticks(5);\n}\n\nfunction make_y_gridlines() {\n    return d3.axisLeft(y).ticks(8);\n}\n\nfunction tweenDashoffsetOn() {\n    var l = this.getTotalLength(),\n        i = d3.interpolateString('' + l, '0');\n    return function (t) {\n        return i(t);\n    };\n}\n\nfunction tweenDashoffsetOff() {\n    var l = this.getTotalLength(),\n        i = d3.interpolateString('0', '' + l);\n    return function (t) {\n        return i(t);\n    };\n}\n\nfunction mouseOver(g, countries) {\n    //Add new element to the DOM\n    var mouseG = g.append('g').attr('class', 'mouse-over-effects');\n\n    //This is the black vertical line to follow mouse\n    mouseG.append('path').attr('class', 'mouse-line').style('stroke', 'black').style('stroke-width', '1px').style('opacity', '0');\n\n    //Get all the lines in the DOM\n    var lines = document.getElementsByClassName('line');\n\n    //Adds new elements to the DOM for each country\n    var mousePerLine = mouseG.selectAll('.mouse-per-line').data(countries).enter().append('g').attr('class', 'country mouse-per-line').attr('id', function (d) {\n        return d.id.split(' ').join('_');\n    });\n\n    //Adds circles on visible lines\n    mousePerLine.append('circle').attr('r', 7).style('stroke', function (d) {\n        return z(d.id);\n    }).style('fill', 'none').style('stroke-width', '1px').style('opacity', '0').style('visibility', 'visible').filter(function (d) {\n        //Only shows the circles for selected countries\n        return d.display;\n    }).style('visibility', 'visible');\n\n    //Adds text next to the circles for visible lines which show the current value\n    mousePerLine.append('text').attr('transform', 'translate(10,3)').style('font', '12px sans-serif').style('visibility', 'visible').filter(function (d) {\n        //Only shows the values for selected countries\n        return d.display;\n    }).style('visibility', 'visible');\n\n    var idx = undefined;\n    var pos = undefined;\n    mouseG.append('svg:rect') //Append a rect to catch mouse movements on canvas\n    .attr('width', _variables.width) //Can't catch mouse events on a g element\n    .attr('height', _variables.height).attr('fill', 'none').attr('pointer-events', 'all').on('mouseout', function () {\n        //On mouse out hide line, circles and text\n        d3.select('.mouse-line').style('opacity', '0');\n        d3.selectAll('.mouse-per-line circle').style('opacity', '0');\n        d3.selectAll('.mouse-per-line text').style('opacity', '0');\n    }).on('mouseover', function () {\n        //On mouse in show line, circles and text\n        d3.select('.mouse-line').style('opacity', '1');\n        d3.selectAll('.mouse-per-line circle').style('opacity', '1');\n        d3.selectAll('.mouse-per-line text').style('opacity', '1');\n    }).on('mousemove', function () {\n        //Mouse moving over canvas\n        var mouse = d3.mouse(this);\n        d3.select('.mouse-line').attr('d', function () {\n            var d = 'M' + mouse[0] + ',' + _variables.height;\n            d += ' ' + mouse[0] + ',' + 0;\n            return d;\n        });\n\n        d3.selectAll('.mouse-per-line').attr('transform', function (d, i) {\n            var xDate = x.invert(mouse[0]),\n                bisect = d3.bisector(function (d) {\n                return d.date;\n            }).right;\n            idx = bisect(d.values, xDate);\n\n            var beginning = 0,\n                end = lines[i].getTotalLength(),\n                target = null;\n\n            while (true) {\n                target = Math.floor((beginning + end) / 2);\n                pos = lines[i].getPointAtLength(target);\n                if ((target === end || target === beginning) && pos.x !== mouse[0]) {\n                    break;\n                }\n                if (pos.x > mouse[0]) end = target;else if (pos.x < mouse[0]) beginning = target;else break; //position found\n            }\n\n            d3.select(this).select('text').text(y.invert(pos.y).toFixed(2));\n            return 'translate(' + mouse[0] + ',' + pos.y + ')';\n        });\n    });\n}\n\nfunction drawGrid() {\n    //Add the X gridlines\n    utils.svg.append('g').attr('class', 'grid').attr('transform', 'translate(' + _variables.margin.left + ',' + (_variables.height + _variables.margin.top) + ')').call(make_x_gridlines().tickSize(-_variables.height).tickFormat(''));\n    //Add the Y gridlines\n    utils.svg.append('g').attr('class', 'grid').attr('transform', 'translate(' + _variables.margin.left + ',' + _variables.margin.top + ')').call(make_y_gridlines().tickSize(-_variables.width).tickFormat(''));\n}\n\nfunction drawLines(g, countries) {\n\n    //Add new element to the DOM for each country\n    var country = g.selectAll('.country').data(countries).enter().append('g').attr('class', 'country').attr('id', function (d) {\n        return d.id.split(' ').join('_');\n    });\n\n    //Adds new path elements to the DOM for each country\n    country.append('path').attr('class', 'line').attr('d', function (d) {\n        return line(d.values); // uses the line generator\n    }).attr('fill', 'none').style('stroke', function (d) {\n        return z(d.id);\n    });\n\n    country.append('text').datum(function (d) {\n        //Allows the binding of country data to multiple SVG elements\n        console.log({ id: d.id, value: d.values[d.values.length - 1] });\n        return { id: d.id, value: d.values[d.values.length - 1] };\n    }).attr('transform', function (d) {\n        return 'translate(' + _variables.width + ',' + y(d.value.value) + ')';\n    }).attr('x', 3).attr('dy', '0.35em').style('font', '10px sans-serif').text(function (d) {\n        console.log(d.id);\n        return d.id;\n    }).style('text-anchor', 'start')\n    // .style('opacity', 0)\n    // .filter(function (d) { //Only shows the country names for selected countries\n    //     return d.display\n    // })\n    .transition().duration(2000).style('opacity', '1');\n    //\n    //\n    var paths = country.select('path').each(function () {\n        d3.select(this).attr('stroke-dasharray', this.getTotalLength() + ',' + this.getTotalLength()).attr('stroke-dashoffset', '' + this.getTotalLength());\n    })\n    // paths.filter(function (d) { // only shows the lines for selected countries\n    //     return d.display\n    // })\n    .transition().duration(2000).attrTween('stroke-dashoffset', tweenDashoffsetOn);\n}\n\nfunction drawAxis(g) {\n    g.append('g').attr('transform', 'translate(0,' + _variables.height + ')').call(d3.axisBottom(x)).append('text').attr('transform', 'translate(' + (_variables.width - 100) + ',' + 50 + ')').attr('fill', '#000').text('Year');\n\n    g.append('g').attr('class', 'axis axis--y').call(d3.axisLeft(y)).append('text').attr('transform', 'rotate(-90)').attr('y', 6).attr('dy', '0.71em').attr('fill', '#000');\n\n    utils.svg.append('text').attr('font-family', 'Sans-serif').attr('font-size', '0.8em').attr('transform', 'rotate(-90)').attr('x', 0 - _variables.height / 2 + 30).attr('dy', '1em').style('text-anchor', 'middle').text('Water Stress Level');\n}\n\nfunction create_domains(data) {\n    x.domain([utils.parseTime('1978'), utils.parseTime('2040')]);\n    y.domain([0, d3.max(data, function (c) {\n        return d3.max(c.values, function (d) {\n            return d.value;\n        });\n    })]);\n    z.domain(data.map(function (c) {\n        return c.id;\n    }));\n}\n\nfunction checkChanged() {\n    var checked = this.checked;\n    var countryID = this.getAttribute('countryID');\n    var country = this.getAttribute('country');\n\n    var g = d3.select('#' + countryID);\n\n    if (!checked) {\n        //Remove the text, line and circle/value of the selected country\n        g.select('text').transition().duration(1000).style('opacity', 0);\n        g.select('path').transition().duration(2000).attrTween('stroke-dashoffset', tweenDashoffsetOff);\n        //Select elements deeper in the DOM\n        d3.select('.mouse-over-effects').select('#' + countryID).selectAll('circle').style('visibility', 'hidden');\n        d3.select('.mouse-over-effects').select('#' + countryID).selectAll('text').style('visibility', 'hidden');\n        _variables.display_country[country].display = false;\n    } else {\n        //Add the text, line and circle/value of the selected country\n        g.select('text').transition().duration(1000).style('opacity', 1);\n        g.select('path').transition().duration(2000).attrTween('stroke-dashoffset', tweenDashoffsetOn);\n        //Select elements deeper in the DOM\n        d3.select('.mouse-over-effects').select('#' + countryID).selectAll('circle').style('visibility', 'visible');\n        d3.select('.mouse-over-effects').select('#' + countryID).selectAll('text').style('visibility', 'visible');\n        _variables.display_country[country].display = true;\n    }\n}\n\nfunction drawCheckboxes(countries) {\n    var checkboxes = d3.select('.country-list').selectAll('.country-checkbox').data(countries).enter().append('li').attr('class', 'country-checkbox');\n\n    checkboxes.append('input').attr('type', 'checkbox').attr('country', function (d) {\n        return d.id;\n    }).attr('id', function (d) {\n        return d.id.split(' ').join('_') + '_checkbox';\n    }).attr('countryID', function (d) {\n        return d.id.split(' ').join('_');\n    }).on('change', checkChanged) // Call checkChanged when changed\n    .filter(function (d) {\n        return d.display;\n    }).each(function (d) {\n        d3.select(this).attr('checked', true);\n    });\n\n    checkboxes.append('label').attr('for', function (d) {\n        return d.id.split(' ').join('_') + '_checkbox';\n    }).text(function (d) {\n        return d.id;\n    });\n}\n\nfunction renderLineChart(country) {\n    var g = utils.svg.append('g').attr('id', 'line_chart').attr('transform', 'translate(' + _variables.margin.left + ',' + _variables.margin.top + ')');\n    var data = [utils.getAllValuesForCountry(country)];\n    create_domains(data);\n    // drawGrid();\n    drawAxis(g);\n    drawLines(g, data);\n    drawCheckboxes(data);\n    mouseOver(g, data);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./scripts/line_chart.js\n");

/***/ }),

/***/ "./scripts/map.js":
/*!************************!*\
  !*** ./scripts/map.js ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.color = exports.path = exports.projection = undefined;\nexports.renderMap = renderMap;\n\nvar _index = __webpack_require__(/*! ./index */ \"./scripts/index.js\");\n\nvar utils = _interopRequireWildcard(_index);\n\nvar _variables = __webpack_require__(/*! ./variables */ \"./scripts/variables.js\");\n\nvar _line_chart = __webpack_require__(/*! ./line_chart */ \"./scripts/line_chart.js\");\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nvar colours = {};\n\nvar projection = exports.projection = d3.geoMiller().scale(150).translate([_variables.width / 2, _variables.height / 1.8]);\n\nvar path = exports.path = d3.geoPath().projection(projection);\n\nvar color = exports.color = d3.scaleThreshold().domain([1, 2, 3, 4, 5]).range(d3.schemeReds[5]);\n\nfunction renderMap(data) {\n    d3.json('./Data/countries.geojson', function (error, mapData) {\n        var features = mapData.features;\n        utils.svg.append('g').attr('id', 'map').attr('class', 'countries').style('display', 'block').selectAll('path').data(features).enter().append('path').attr('id', function (d) {\n            return d.properties.name;\n        }).attr('d', path).style('fill', function (d) {\n            var value = data[d.properties.name];\n            if (value === -1 || value === undefined) return d3.color(\"grey\");else {\n                var c = color(data[d.properties.name]);\n                var country_names = void 0;\n                if (colours[c] === undefined) country_names = [];else country_names = colours[c];\n                country_names.push(d.properties.name);\n                colours[c] = country_names;\n                return c;\n            }\n        }).on(\"mouseover\", function (d) {\n            var country_name = d.properties.name;\n            if (data[d.properties.name] !== -1 && data[d.properties.name] !== undefined) d3.select(this).style(\"fill\", \"orange\");\n        }).on(\"mouseout\", function (d) {\n            if (data[d.properties.name] !== -1 && data[d.properties.name] !== undefined) {\n                d3.select(this).style(\"fill\", function (d) {\n                    var c = color(data[d.properties.name]);\n                    return c;\n                });\n            }\n        }).on(\"click\", function (d) {\n            if (data[d.properties.name] !== -1 && data[d.properties.name] !== undefined) {\n                var country_name = d.properties.name;\n                console.log(\"clicked: \" + country_name);\n                utils.showLineChart();\n                (0, _line_chart.renderLineChart)(country_name);\n            }\n        });\n    });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zY3JpcHRzL21hcC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9zY3JpcHRzL21hcC5qcz82ZDIyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIHV0aWxzIGZyb20gXCIuL2luZGV4XCI7XG5pbXBvcnQge3dpZHRoLCBoZWlnaHR9IGZyb20gXCIuL3ZhcmlhYmxlc1wiO1xuaW1wb3J0IHtyZW5kZXJMaW5lQ2hhcnR9IGZyb20gXCIuL2xpbmVfY2hhcnRcIjtcblxuXG5sZXQgY29sb3VycyA9IHt9O1xuXG5leHBvcnQgY29uc3QgcHJvamVjdGlvbiA9IGQzLmdlb01pbGxlcigpXG4gICAgLnNjYWxlKDE1MClcbiAgICAudHJhbnNsYXRlKFt3aWR0aCAvIDIsIGhlaWdodCAvIDEuOF0pO1xuXG5leHBvcnQgY29uc3QgcGF0aCA9IGQzLmdlb1BhdGgoKVxuICAgIC5wcm9qZWN0aW9uKHByb2plY3Rpb24pO1xuXG5leHBvcnQgY29uc3QgY29sb3IgPSBkMy5zY2FsZVRocmVzaG9sZCgpXG4gICAgLmRvbWFpbihbMSwgMiwgMywgNCwgNV0pXG4gICAgLnJhbmdlKGQzLnNjaGVtZVJlZHNbNV0pO1xuXG5cbmV4cG9ydCBmdW5jdGlvbiByZW5kZXJNYXAoZGF0YSkge1xuICAgIGQzLmpzb24oJy4vRGF0YS9jb3VudHJpZXMuZ2VvanNvbicsIGZ1bmN0aW9uIChlcnJvciwgbWFwRGF0YSkge1xuICAgICAgICBjb25zdCBmZWF0dXJlcyA9IG1hcERhdGEuZmVhdHVyZXM7XG4gICAgICAgIHV0aWxzLnN2Zy5hcHBlbmQoJ2cnKVxuICAgICAgICAgICAgLmF0dHIoJ2lkJywgJ21hcCcpXG4gICAgICAgICAgICAuYXR0cignY2xhc3MnLCAnY291bnRyaWVzJylcbiAgICAgICAgICAgIC5zdHlsZSgnZGlzcGxheScsICdibG9jaycpXG4gICAgICAgICAgICAuc2VsZWN0QWxsKCdwYXRoJylcbiAgICAgICAgICAgIC5kYXRhKGZlYXR1cmVzKVxuICAgICAgICAgICAgLmVudGVyKClcbiAgICAgICAgICAgIC5hcHBlbmQoJ3BhdGgnKVxuICAgICAgICAgICAgLmF0dHIoJ2lkJywgZnVuY3Rpb24gKGQpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZC5wcm9wZXJ0aWVzLm5hbWVcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAuYXR0cignZCcsIHBhdGgpXG4gICAgICAgICAgICAuc3R5bGUoJ2ZpbGwnLCBmdW5jdGlvbiAoZCkge1xuICAgICAgICAgICAgICAgIGxldCB2YWx1ZSA9IGRhdGFbZC5wcm9wZXJ0aWVzLm5hbWVdO1xuICAgICAgICAgICAgICAgIGlmICh2YWx1ZSA9PT0gLTEgfHwgdmFsdWUgPT09IHVuZGVmaW5lZClcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGQzLmNvbG9yKFwiZ3JleVwiKTtcbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgbGV0IGMgPSBjb2xvcihkYXRhW2QucHJvcGVydGllcy5uYW1lXSk7XG4gICAgICAgICAgICAgICAgICAgIGxldCBjb3VudHJ5X25hbWVzO1xuICAgICAgICAgICAgICAgICAgICBpZihjb2xvdXJzW2NdID09PSB1bmRlZmluZWQpXG4gICAgICAgICAgICAgICAgICAgICAgICBjb3VudHJ5X25hbWVzID0gW107XG4gICAgICAgICAgICAgICAgICAgIGVsc2VcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvdW50cnlfbmFtZXMgPSBjb2xvdXJzW2NdO1xuICAgICAgICAgICAgICAgICAgICBjb3VudHJ5X25hbWVzLnB1c2goZC5wcm9wZXJ0aWVzLm5hbWUpO1xuICAgICAgICAgICAgICAgICAgICBjb2xvdXJzW2NdID0gY291bnRyeV9uYW1lcztcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgLm9uKFwibW91c2VvdmVyXCIsIGZ1bmN0aW9uIChkKSB7XG4gICAgICAgICAgICAgICAgbGV0IGNvdW50cnlfbmFtZSA9IGQucHJvcGVydGllcy5uYW1lO1xuICAgICAgICAgICAgICAgIGlmKGRhdGFbZC5wcm9wZXJ0aWVzLm5hbWVdICE9PSAtMSAmJiBkYXRhW2QucHJvcGVydGllcy5uYW1lXSAhPT0gdW5kZWZpbmVkKVxuICAgICAgICAgICAgICAgICAgICBkMy5zZWxlY3QodGhpcykuc3R5bGUoXCJmaWxsXCIsIFwib3JhbmdlXCIpO1xuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIC5vbihcIm1vdXNlb3V0XCIsIGZ1bmN0aW9uIChkKSB7XG4gICAgICAgICAgICAgICAgaWYoZGF0YVtkLnByb3BlcnRpZXMubmFtZV0gIT09IC0xICYmIGRhdGFbZC5wcm9wZXJ0aWVzLm5hbWVdICE9PSB1bmRlZmluZWQpe1xuICAgICAgICAgICAgICAgICAgICBkMy5zZWxlY3QodGhpcykuc3R5bGUoXCJmaWxsXCIsIGZ1bmN0aW9uIChkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBsZXQgYyA9IGNvbG9yKGRhdGFbZC5wcm9wZXJ0aWVzLm5hbWVdKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjXG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAub24oXCJjbGlja1wiLCBmdW5jdGlvbiAoZCkge1xuICAgICAgICAgICAgICAgIGlmKGRhdGFbZC5wcm9wZXJ0aWVzLm5hbWVdICE9PSAtMSAmJiBkYXRhW2QucHJvcGVydGllcy5uYW1lXSAhPT0gdW5kZWZpbmVkKXtcbiAgICAgICAgICAgICAgICAgICAgbGV0IGNvdW50cnlfbmFtZSA9IGQucHJvcGVydGllcy5uYW1lO1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcImNsaWNrZWQ6IFwiICsgY291bnRyeV9uYW1lKTtcbiAgICAgICAgICAgICAgICAgICAgdXRpbHMuc2hvd0xpbmVDaGFydCgpO1xuICAgICAgICAgICAgICAgICAgICByZW5kZXJMaW5lQ2hhcnQoY291bnRyeV9uYW1lKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pXG5cbiAgICB9KTtcblxufVxuXG4iXSwibWFwcGluZ3MiOiI7Ozs7OztBQW1CQTtBQUNBO0FBcEJBO0FBQ0E7QUFEQTtBQUNBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7OztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBR0E7QUFDQTtBQUVBO0FBQ0E7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQVNBO0FBQ0E7QUFHQTtBQUNBO0FBR0E7QUFDQTtBQUNBO0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFFQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUVBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./scripts/map.js\n");

/***/ }),

/***/ "./scripts/slider.js":
/*!***************************!*\
  !*** ./scripts/slider.js ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.createSlider = createSlider;\n\nvar _index = __webpack_require__(/*! ./index */ \"./scripts/index.js\");\n\nvar utils = _interopRequireWildcard(_index);\n\nvar _variables = __webpack_require__(/*! ./variables */ \"./scripts/variables.js\");\n\nvar _map = __webpack_require__(/*! ./map */ \"./scripts/map.js\");\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction createSlider() {\n\n    var data3 = d3.range(0, Object.keys(_variables.years).length).map(function (d) {\n        return new Date(Object.keys(_variables.years)[d], 10, 3);\n    });\n\n    var slider3 = d3.sliderHorizontal().min(d3.min(data3)).max(d3.max(data3)).width(450).tickFormat(d3.timeFormat('%Y')).tickValues(data3).on('onchange', function (val) {\n        var keys = Object.keys(_variables.years);\n        var current_year = _variables.years[keys.reverse().find(function (e) {\n            return e <= utils.formatTime(val);\n        })];\n        var millisecondsToWait = 500;\n        setTimeout(function () {\n            (0, _map.renderMap)(_variables.water_stress_levels.get(current_year));\n        }, millisecondsToWait);\n    });\n\n    utils.svg.append('g').attr('id', 'slider').attr(\"transform\", \"translate(\" + (_variables.width / 2 - _variables.slider_width / 2 + _variables.padding) + \", \" + _variables.height + \")\").attr('width', _variables.slider_width).attr('height', _variables.slider_height).call(slider3);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zY3JpcHRzL3NsaWRlci5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9zY3JpcHRzL3NsaWRlci5qcz84YjkwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIHV0aWxzIGZyb20gXCIuL2luZGV4XCI7XG5pbXBvcnQge3dpZHRoLCBoZWlnaHQsIHNsaWRlcl9oZWlnaHQsIHNsaWRlcl93aWR0aCwgeWVhcnMsIHBhZGRpbmcsIHdhdGVyX3N0cmVzc19sZXZlbHN9IGZyb20gXCIuL3ZhcmlhYmxlc1wiO1xuaW1wb3J0IHtyZW5kZXJNYXB9IGZyb20gXCIuL21hcFwiO1xuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlU2xpZGVyKCkge1xuXG4gICAgY29uc3QgZGF0YTMgPVxuICAgICAgICBkMy5yYW5nZSgwLCBPYmplY3Qua2V5cyh5ZWFycykubGVuZ3RoKS5tYXAoZnVuY3Rpb24gKGQpIHtcbiAgICAgICAgICAgIHJldHVybiBuZXcgRGF0ZShPYmplY3Qua2V5cyh5ZWFycylbZF0sIDEwLCAzKTtcbiAgICAgICAgfSk7XG5cbiAgICBjb25zdCBzbGlkZXIzID0gZDMuc2xpZGVySG9yaXpvbnRhbCgpXG4gICAgICAgIC5taW4oZDMubWluKGRhdGEzKSlcbiAgICAgICAgLm1heChkMy5tYXgoZGF0YTMpKVxuICAgICAgICAud2lkdGgoNDUwKVxuICAgICAgICAudGlja0Zvcm1hdChkMy50aW1lRm9ybWF0KCclWScpKVxuICAgICAgICAudGlja1ZhbHVlcyhkYXRhMylcbiAgICAgICAgLm9uKCdvbmNoYW5nZScsIHZhbCA9PiB7XG4gICAgICAgICAgICBsZXQga2V5cyA9IE9iamVjdC5rZXlzKHllYXJzKTtcbiAgICAgICAgICAgIGxldCBjdXJyZW50X3llYXIgPSB5ZWFyc1trZXlzLnJldmVyc2UoKS5maW5kKGUgPT4gZSA8PSB1dGlscy5mb3JtYXRUaW1lKHZhbCkpXTtcbiAgICAgICAgICAgIGNvbnN0IG1pbGxpc2Vjb25kc1RvV2FpdCA9IDUwMDtcbiAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHJlbmRlck1hcCh3YXRlcl9zdHJlc3NfbGV2ZWxzLmdldChjdXJyZW50X3llYXIpKVxuICAgICAgICAgICAgfSwgbWlsbGlzZWNvbmRzVG9XYWl0KTtcbiAgICAgICAgfSk7XG5cblxuICAgIHV0aWxzLnN2Zy5hcHBlbmQoJ2cnKVxuICAgICAgICAuYXR0cignaWQnLCAnc2xpZGVyJylcbiAgICAgICAgLmF0dHIoXCJ0cmFuc2Zvcm1cIiwgXCJ0cmFuc2xhdGUoXCIgKyAoKHdpZHRoIC8gMikgLSAoc2xpZGVyX3dpZHRoIC8gMikgKyBwYWRkaW5nKSArIFwiLCBcIiArIChoZWlnaHQpICsgXCIpXCIpXG4gICAgICAgIC5hdHRyKCd3aWR0aCcsIHNsaWRlcl93aWR0aClcbiAgICAgICAgLmF0dHIoJ2hlaWdodCcsIHNsaWRlcl9oZWlnaHQpXG4gICAgICAgIC5jYWxsKHNsaWRlcjMpO1xuXG5cbn0iXSwibWFwcGluZ3MiOiI7Ozs7O0FBSUE7QUFDQTtBQUxBO0FBQ0E7QUFEQTtBQUNBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7OztBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBT0E7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQVFBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./scripts/slider.js\n");

/***/ }),

/***/ "./scripts/variables.js":
/*!******************************!*\
  !*** ./scripts/variables.js ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar width = exports.width = 1200,\n    height = exports.height = 600;\nvar slider_width = exports.slider_width = 500,\n    slider_height = exports.slider_height = 100;\nvar padding = exports.padding = 40;\nvar margin = exports.margin = { top: 20, right: 80, bottom: 30, left: 70 };\n\nvar years = exports.years = {\n    1978: '1978-1982',\n    1983: '1983-1987',\n    1988: '1988-1992',\n    1993: '1993-1997',\n    1998: '1998-2002',\n    2003: '2003-2007',\n    2008: '2008-2012',\n    2013: '2013-2017',\n    2018: '2020',\n    2030: '2030',\n    2040: '2040'\n};\n\nvar display_country = exports.display_country = {\n    \"Afghanistan\": { display: false },\n    \"Albania\": { display: false },\n    \"Algeria\": { display: false },\n    \"Angola\": { display: false },\n    \"Antigua and Barbuda\": { display: false },\n    \"Argentina\": { display: false },\n    \"Armenia\": { display: false },\n    \"Australia\": { display: false },\n    \"Austria\": { display: false },\n    \"Azerbaijan\": { display: false },\n    \"Bahrain\": { display: false },\n    \"Bangladesh\": { display: false },\n    \"Barbados\": { display: false },\n    \"Belarus\": { display: false },\n    \"Belgium\": { display: false },\n    \"Belize\": { display: false },\n    \"Benin\": { display: false },\n    \"Bhutan\": { display: false },\n    \"Bolivia (Plurinational State of)\": { display: false },\n    \"Bosnia and Herzegovina\": { display: false },\n    \"Botswana\": { display: false },\n    \"Brazil\": { display: false },\n    \"Brunei Darussalam\": { display: false },\n    \"Bulgaria\": { display: false },\n    \"Burkina Faso\": { display: false },\n    \"Burundi\": { display: false },\n    \"Cabo Verde\": { display: false },\n    \"Cambodia\": { display: false },\n    \"Cameroon\": { display: false },\n    \"Canada\": { display: false },\n    \"Central African Republic\": { display: false },\n    \"Chad\": { display: false },\n    \"Chile\": { display: false },\n    \"China\": { display: false },\n    \"Colombia\": { display: false },\n    \"Comoros\": { display: false },\n    \"Congo\": { display: false },\n    \"Costa Rica\": { display: false },\n    \"Cote d'Ivoire\": { display: false },\n    \"Croatia\": { display: false },\n    \"Cuba\": { display: false },\n    \"Cyprus\": { display: false },\n    \"Czechia\": { display: false },\n    \"Democratic People's Republic of Korea\": { display: false },\n    \"Democratic Republic of the Congo\": { display: false },\n    \"Denmark\": { display: false },\n    \"Djibouti\": { display: false },\n    \"Dominica\": { display: false },\n    \"Dominican Republic\": { display: false },\n    \"Ecuador\": { display: false },\n    \"Egypt\": { display: false },\n    \"El Salvador\": { display: false },\n    \"Equatorial Guinea\": { display: false },\n    \"Eritrea\": { display: false },\n    \"Estonia\": { display: false },\n    \"Ethiopia\": { display: false },\n    \"Fiji\": { display: false },\n    \"Finland\": { display: false },\n    \"France\": { display: false },\n    \"Gabon\": { display: false },\n    \"Gambia\": { display: false },\n    \"Georgia\": { display: false },\n    \"Germany\": { display: false },\n    \"Ghana\": { display: false },\n    \"Greece\": { display: false },\n    \"Grenada\": { display: false },\n    \"Guatemala\": { display: false },\n    \"Guinea\": { display: false },\n    \"Guinea-Bissau\": { display: false },\n    \"Guyana\": { display: false },\n    \"Haiti\": { display: false },\n    \"Honduras\": { display: false },\n    \"Hungary\": { display: false },\n    \"Iceland\": { display: false },\n    \"India\": { display: false },\n    \"Indonesia\": { display: false },\n    \"Iran (Islamic Republic of)\": { display: false },\n    \"Iraq\": { display: false },\n    \"Ireland\": { display: false },\n    \"Israel\": { display: false },\n    \"Italy\": { display: false },\n    \"Jamaica\": { display: false },\n    \"Japan\": { display: false },\n    \"Jordan\": { display: false },\n    \"Kazakhstan\": { display: false },\n    \"Kenya\": { display: false },\n    \"Kuwait\": { display: false },\n    \"Kyrgyzstan\": { display: false },\n    \"Lao People's Democratic Republic\": { display: false },\n    \"Latvia\": { display: false },\n    \"Lebanon\": { display: false },\n    \"Lesotho\": { display: false },\n    \"Liberia\": { display: false },\n    \"Libya\": { display: false },\n    \"Lithuania\": { display: false },\n    \"Luxembourg\": { display: false },\n    \"Madagascar\": { display: false },\n    \"Malawi\": { display: false },\n    \"Malaysia\": { display: false },\n    \"Maldives\": { display: false },\n    \"Mali\": { display: false },\n    \"Malta\": { display: false },\n    \"Mauritania\": { display: false },\n    \"Mauritius\": { display: false },\n    \"Mexico\": { display: false },\n    \"Mongolia\": { display: false },\n    \"Morocco\": { display: false },\n    \"Mozambique\": { display: false },\n    \"Myanmar\": { display: false },\n    \"Namibia\": { display: false },\n    \"Nepal\": { display: false },\n    \"Netherlands\": { display: false },\n    \"New Zealand\": { display: false },\n    \"Nicaragua\": { display: false },\n    \"Niger\": { display: false },\n    \"Nigeria\": { display: false },\n    \"Norway\": { display: false },\n    \"Occupied Palestinian Territory\": { display: false },\n    \"Oman\": { display: false },\n    \"Pakistan\": { display: false },\n    \"Panama\": { display: false },\n    \"Papua New Guinea\": { display: false },\n    \"Paraguay\": { display: false },\n    \"Peru\": { display: false },\n    \"Philippines\": { display: false },\n    \"Poland\": { display: false },\n    \"Portugal\": { display: false },\n    \"Puerto Rico\": { display: false },\n    \"Qatar\": { display: false },\n    \"Republic of Korea\": { display: false },\n    \"Republic of Moldova\": { display: false },\n    \"Romania\": { display: false },\n    \"Russian Federation\": { display: false },\n    \"Rwanda\": { display: false },\n    \"Saint Kitts and Nevis\": { display: false },\n    \"Saint Lucia\": { display: false },\n    \"Saint Vincent and the Grenadines\": { display: false },\n    \"Sao Tome and Principe\": { display: false },\n    \"Saudi Arabia\": { display: false },\n    \"Senegal\": { display: false },\n    \"Serbia\": { display: false },\n    \"Sierra Leone\": { display: false },\n    \"Slovakia\": { display: false },\n    \"Slovenia\": { display: false },\n    \"Somalia\": { display: false },\n    \"South Africa\": { display: false },\n    \"South Sudan\": { display: false },\n    \"Spain\": { display: false },\n    \"Sri Lanka\": { display: false },\n    \"Sudan\": { display: false },\n    \"Suriname\": { display: false },\n    \"Swaziland\": { display: false },\n    \"Sweden\": { display: false },\n    \"Switzerland\": { display: false },\n    \"Syrian Arab Republic\": { display: false },\n    \"Tajikistan\": { display: false },\n    \"Thailand\": { display: false },\n    \"The former Yugoslav Republic of Macedonia\": { display: false },\n    \"Timor-Leste\": { display: false },\n    \"Togo\": { display: false },\n    \"Trinidad and Tobago\": { display: false },\n    \"Tunisia\": { display: false },\n    \"Turkey\": { display: false },\n    \"Turkmenistan\": { display: false },\n    \"Uganda\": { display: false },\n    \"Ukraine\": { display: false },\n    \"United Arab Emirates\": { display: false },\n    \"United Kingdom\": { display: false },\n    \"United Republic of Tanzania\": { display: false },\n    \"United States of America\": { display: false },\n    \"Uruguay\": { display: false },\n    \"Uzbekistan\": { display: false },\n    \"Venezuela (Bolivarian Republic of)\": { display: false },\n    \"Viet Nam\": { display: false },\n    \"Yemen\": { display: false },\n    \"Zambia\": { display: false },\n    \"Zimbabwe\": { display: false },\n    \"Greenland\": { display: false }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zY3JpcHRzL3ZhcmlhYmxlcy5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9zY3JpcHRzL3ZhcmlhYmxlcy5qcz8wMjFlIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCB3aWR0aCA9IDEyMDAsIGhlaWdodCA9IDYwMDtcbmV4cG9ydCBjb25zdCBzbGlkZXJfd2lkdGggPSA1MDAsIHNsaWRlcl9oZWlnaHQgPSAxMDA7XG5leHBvcnQgY29uc3QgcGFkZGluZyA9IDQwO1xuZXhwb3J0IGNvbnN0IG1hcmdpbiA9IHt0b3A6IDIwLCByaWdodDogODAsIGJvdHRvbTogMzAsIGxlZnQ6IDcwfTtcblxuZXhwb3J0IGNvbnN0IHllYXJzID0ge1xuICAgIDE5Nzg6ICcxOTc4LTE5ODInLFxuICAgIDE5ODM6ICcxOTgzLTE5ODcnLFxuICAgIDE5ODg6ICcxOTg4LTE5OTInLFxuICAgIDE5OTM6ICcxOTkzLTE5OTcnLFxuICAgIDE5OTg6ICcxOTk4LTIwMDInLFxuICAgIDIwMDM6ICcyMDAzLTIwMDcnLFxuICAgIDIwMDg6ICcyMDA4LTIwMTInLFxuICAgIDIwMTM6ICcyMDEzLTIwMTcnLFxuICAgIDIwMTg6ICcyMDIwJyxcbiAgICAyMDMwOiAnMjAzMCcsXG4gICAgMjA0MDogJzIwNDAnLFxufTtcblxuZXhwb3J0IGNvbnN0IGRpc3BsYXlfY291bnRyeSA9IHtcbiAgICBcIkFmZ2hhbmlzdGFuXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJBbGJhbmlhXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJBbGdlcmlhXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJBbmdvbGFcIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIkFudGlndWEgYW5kIEJhcmJ1ZGFcIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIkFyZ2VudGluYVwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiQXJtZW5pYVwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiQXVzdHJhbGlhXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJBdXN0cmlhXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJBemVyYmFpamFuXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJCYWhyYWluXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJCYW5nbGFkZXNoXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJCYXJiYWRvc1wiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiQmVsYXJ1c1wiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiQmVsZ2l1bVwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiQmVsaXplXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJCZW5pblwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiQmh1dGFuXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJCb2xpdmlhIChQbHVyaW5hdGlvbmFsIFN0YXRlIG9mKVwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiQm9zbmlhIGFuZCBIZXJ6ZWdvdmluYVwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiQm90c3dhbmFcIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIkJyYXppbFwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiQnJ1bmVpIERhcnVzc2FsYW1cIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIkJ1bGdhcmlhXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJCdXJraW5hIEZhc29cIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIkJ1cnVuZGlcIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIkNhYm8gVmVyZGVcIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIkNhbWJvZGlhXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJDYW1lcm9vblwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiQ2FuYWRhXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJDZW50cmFsIEFmcmljYW4gUmVwdWJsaWNcIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIkNoYWRcIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIkNoaWxlXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJDaGluYVwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiQ29sb21iaWFcIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIkNvbW9yb3NcIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIkNvbmdvXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJDb3N0YSBSaWNhXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJDb3RlIGQnSXZvaXJlXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJDcm9hdGlhXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJDdWJhXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJDeXBydXNcIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIkN6ZWNoaWFcIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIkRlbW9jcmF0aWMgUGVvcGxlJ3MgUmVwdWJsaWMgb2YgS29yZWFcIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIkRlbW9jcmF0aWMgUmVwdWJsaWMgb2YgdGhlIENvbmdvXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJEZW5tYXJrXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJEamlib3V0aVwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiRG9taW5pY2FcIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIkRvbWluaWNhbiBSZXB1YmxpY1wiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiRWN1YWRvclwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiRWd5cHRcIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIkVsIFNhbHZhZG9yXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJFcXVhdG9yaWFsIEd1aW5lYVwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiRXJpdHJlYVwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiRXN0b25pYVwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiRXRoaW9waWFcIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIkZpamlcIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIkZpbmxhbmRcIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIkZyYW5jZVwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiR2Fib25cIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIkdhbWJpYVwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiR2VvcmdpYVwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiR2VybWFueVwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiR2hhbmFcIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIkdyZWVjZVwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiR3JlbmFkYVwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiR3VhdGVtYWxhXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJHdWluZWFcIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIkd1aW5lYS1CaXNzYXVcIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIkd1eWFuYVwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiSGFpdGlcIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIkhvbmR1cmFzXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJIdW5nYXJ5XCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJJY2VsYW5kXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJJbmRpYVwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiSW5kb25lc2lhXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJJcmFuIChJc2xhbWljIFJlcHVibGljIG9mKVwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiSXJhcVwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiSXJlbGFuZFwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiSXNyYWVsXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJJdGFseVwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiSmFtYWljYVwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiSmFwYW5cIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIkpvcmRhblwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiS2F6YWtoc3RhblwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiS2VueWFcIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIkt1d2FpdFwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiS3lyZ3l6c3RhblwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiTGFvIFBlb3BsZSdzIERlbW9jcmF0aWMgUmVwdWJsaWNcIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIkxhdHZpYVwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiTGViYW5vblwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiTGVzb3Rob1wiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiTGliZXJpYVwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiTGlieWFcIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIkxpdGh1YW5pYVwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiTHV4ZW1ib3VyZ1wiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiTWFkYWdhc2NhclwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiTWFsYXdpXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJNYWxheXNpYVwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiTWFsZGl2ZXNcIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIk1hbGlcIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIk1hbHRhXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJNYXVyaXRhbmlhXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJNYXVyaXRpdXNcIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIk1leGljb1wiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiTW9uZ29saWFcIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIk1vcm9jY29cIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIk1vemFtYmlxdWVcIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIk15YW5tYXJcIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIk5hbWliaWFcIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIk5lcGFsXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJOZXRoZXJsYW5kc1wiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiTmV3IFplYWxhbmRcIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIk5pY2FyYWd1YVwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiTmlnZXJcIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIk5pZ2VyaWFcIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIk5vcndheVwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiT2NjdXBpZWQgUGFsZXN0aW5pYW4gVGVycml0b3J5XCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJPbWFuXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJQYWtpc3RhblwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiUGFuYW1hXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJQYXB1YSBOZXcgR3VpbmVhXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJQYXJhZ3VheVwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiUGVydVwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiUGhpbGlwcGluZXNcIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIlBvbGFuZFwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiUG9ydHVnYWxcIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIlB1ZXJ0byBSaWNvXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJRYXRhclwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiUmVwdWJsaWMgb2YgS29yZWFcIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIlJlcHVibGljIG9mIE1vbGRvdmFcIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIlJvbWFuaWFcIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIlJ1c3NpYW4gRmVkZXJhdGlvblwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiUndhbmRhXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJTYWludCBLaXR0cyBhbmQgTmV2aXNcIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIlNhaW50IEx1Y2lhXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJTYWludCBWaW5jZW50IGFuZCB0aGUgR3JlbmFkaW5lc1wiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiU2FvIFRvbWUgYW5kIFByaW5jaXBlXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJTYXVkaSBBcmFiaWFcIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIlNlbmVnYWxcIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIlNlcmJpYVwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiU2llcnJhIExlb25lXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJTbG92YWtpYVwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiU2xvdmVuaWFcIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIlNvbWFsaWFcIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIlNvdXRoIEFmcmljYVwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiU291dGggU3VkYW5cIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIlNwYWluXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJTcmkgTGFua2FcIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIlN1ZGFuXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJTdXJpbmFtZVwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiU3dhemlsYW5kXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJTd2VkZW5cIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIlN3aXR6ZXJsYW5kXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJTeXJpYW4gQXJhYiBSZXB1YmxpY1wiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiVGFqaWtpc3RhblwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiVGhhaWxhbmRcIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIlRoZSBmb3JtZXIgWXVnb3NsYXYgUmVwdWJsaWMgb2YgTWFjZWRvbmlhXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJUaW1vci1MZXN0ZVwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiVG9nb1wiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiVHJpbmlkYWQgYW5kIFRvYmFnb1wiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiVHVuaXNpYVwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiVHVya2V5XCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJUdXJrbWVuaXN0YW5cIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIlVnYW5kYVwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiVWtyYWluZVwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiVW5pdGVkIEFyYWIgRW1pcmF0ZXNcIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIlVuaXRlZCBLaW5nZG9tXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJVbml0ZWQgUmVwdWJsaWMgb2YgVGFuemFuaWFcIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIlVuaXRlZCBTdGF0ZXMgb2YgQW1lcmljYVwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiVXJ1Z3VheVwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiVXpiZWtpc3RhblwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiVmVuZXp1ZWxhIChCb2xpdmFyaWFuIFJlcHVibGljIG9mKVwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiVmlldCBOYW1cIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIlllbWVuXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJaYW1iaWFcIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIlppbWJhYndlXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJHcmVlbmxhbmRcIjoge2Rpc3BsYXk6IGZhbHNlfVxufTsiXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFYQTtBQUNBO0FBYUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQWxMQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./scripts/variables.js\n");

/***/ })

/******/ });