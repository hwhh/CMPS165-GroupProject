/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./scripts/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./scripts/index.js":
/*!**************************!*\
  !*** ./scripts/index.js ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.svg = exports.parseTime = exports.formatTime = undefined;\nexports.show_line_chart = show_line_chart;\nexports.show_map = show_map;\n\nvar _map = __webpack_require__(/*! ./map */ \"./scripts/map.js\");\n\nvar _slider = __webpack_require__(/*! ./slider */ \"./scripts/slider.js\");\n\nvar _variables = __webpack_require__(/*! ./variables */ \"./scripts/variables.js\");\n\nvar formatTime = exports.formatTime = d3.timeFormat(\"%Y\");\nvar parseTime = exports.parseTime = d3.timeParse(\"%Y\");\n\nvar svg = exports.svg = d3.select(\"body\").append(\"svg\").attr('width', _variables.width).attr('height', _variables.height + 50);\n\nfunction show_line_chart() {\n    d3.select('svg').select('#map').transition().duration(1000).style('display', 'none');\n    d3.select('svg').select('#slider').transition().duration(1000).style('display', 'none');\n    d3.select('g').select('#line_chart').transition().duration(1000).style('display', 'visibile');\n}\n\nfunction show_map() {\n    d3.select('svg').select('#map').transition().duration(1000).style('display', 'visibile');\n    d3.select('svg').select('#slider').transition().duration(1000).style('display', 'visibile');\n    d3.select('g').select('#line_chart').transition().duration(1000).style('display', 'none');\n}\n\n// const back2Map_button = lineGraph_group.append(\"rect\")\n//     .attr(\"class\", \"back2Map_button\")\n//     .attr(\"transform\", \"translate(\" + 1100 + \",\" + 0 + \")\")\n//     .attr('width', 100)\n//     .attr('height', 50)\n//     .attr('fill', 'lightblue')\n//     .on('click', function () {\n//         // toggle visibility\n//         d3.select('svg').select('#map').transition().duration(1000).style('display', 'block');\n//         d3.select('svg').select('#slider').transition().duration(1000).style('display', 'block');\n//         lineGraph_group.attr('visibility', 'hidden');\n//     });\n\nfunction loadDataset(map, file, func) {\n    return new Promise(function (resolve, reject) {\n        d3.csv(file, function (data) {\n            data.forEach(function (d) {\n                var values = {};\n                Object.keys(d).forEach(function (key) {\n                    if (key !== 'Year') {\n                        key.split(' ').join('-').split('(').join('').split(')').join('').split('\\'').join('');\n                        if (isNaN(parseInt(d[key]))) {\n                            values[key.split(' ').join('-')] = -1;\n                        } else {\n                            values[key.split(' ').join('-')] = func(+d[key]);\n                        }\n                    }\n                });\n                map.set(d.Year, values);\n            });\n            resolve();\n        });\n    });\n}\n\nPromise.all([loadDataset(_variables.water_stress_levels, './Data/water_stress_levels.csv', function (val) {\n    return val / 100 * 5;\n}), loadDataset(_variables.total_external_water, './Data/external_water.csv', function (val) {\n    return val;\n}), loadDataset(_variables.total_internal_water, './Data/internal_water.csv', function (val) {\n    return val;\n}), loadDataset(_variables.total_water_used, './Data/water_withdraws.csv', function (val) {\n    return val;\n})]).then(function (values) {\n    console.log(_variables.water_stress_levels);\n    (0, _map.renderMap)(_variables.water_stress_levels.get('1978-1982'));\n    (0, _slider.createSlider)();\n    // lineChart();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zY3JpcHRzL2luZGV4LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vL3NjcmlwdHMvaW5kZXguanM/NDMwNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge3JlbmRlck1hcH0gZnJvbSBcIi4vbWFwXCI7XG5pbXBvcnQge2NyZWF0ZVNsaWRlcn0gZnJvbSBcIi4vc2xpZGVyXCI7XG5pbXBvcnQge3dpZHRoLCBoZWlnaHQsIHdhdGVyX3N0cmVzc19sZXZlbHMsIHRvdGFsX3dhdGVyX3VzZWQsIHRvdGFsX2V4dGVybmFsX3dhdGVyLCB0b3RhbF9pbnRlcm5hbF93YXRlciwgdG90YWxfYXZhaWxhYmxlX3dhdGVyfSBmcm9tIFwiLi92YXJpYWJsZXNcIjtcblxuXG5leHBvcnQgY29uc3QgZm9ybWF0VGltZSA9IGQzLnRpbWVGb3JtYXQoXCIlWVwiKTtcbmV4cG9ydCBjb25zdCBwYXJzZVRpbWUgPSBkMy50aW1lUGFyc2UoXCIlWVwiKTtcblxuXG5leHBvcnQgY29uc3Qgc3ZnID0gZDMuc2VsZWN0KFwiYm9keVwiKS5hcHBlbmQoXCJzdmdcIilcbiAgICAuYXR0cignd2lkdGgnLCB3aWR0aClcbiAgICAuYXR0cignaGVpZ2h0JywgaGVpZ2h0ICsgNTApO1xuXG5leHBvcnQgZnVuY3Rpb24gc2hvd19saW5lX2NoYXJ0KCkge1xuICAgIGQzLnNlbGVjdCgnc3ZnJykuc2VsZWN0KCcjbWFwJykudHJhbnNpdGlvbigpLmR1cmF0aW9uKDEwMDApLnN0eWxlKCdkaXNwbGF5JywgJ25vbmUnKTtcbiAgICBkMy5zZWxlY3QoJ3N2ZycpLnNlbGVjdCgnI3NsaWRlcicpLnRyYW5zaXRpb24oKS5kdXJhdGlvbigxMDAwKS5zdHlsZSgnZGlzcGxheScsICdub25lJyk7XG4gICAgZDMuc2VsZWN0KCdnJykuc2VsZWN0KCcjbGluZV9jaGFydCcpLnRyYW5zaXRpb24oKS5kdXJhdGlvbigxMDAwKS5zdHlsZSgnZGlzcGxheScsICd2aXNpYmlsZScpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gc2hvd19tYXAoKSB7XG4gICAgZDMuc2VsZWN0KCdzdmcnKS5zZWxlY3QoJyNtYXAnKS50cmFuc2l0aW9uKCkuZHVyYXRpb24oMTAwMCkuc3R5bGUoJ2Rpc3BsYXknLCAndmlzaWJpbGUnKTtcbiAgICBkMy5zZWxlY3QoJ3N2ZycpLnNlbGVjdCgnI3NsaWRlcicpLnRyYW5zaXRpb24oKS5kdXJhdGlvbigxMDAwKS5zdHlsZSgnZGlzcGxheScsICd2aXNpYmlsZScpO1xuICAgIGQzLnNlbGVjdCgnZycpLnNlbGVjdCgnI2xpbmVfY2hhcnQnKS50cmFuc2l0aW9uKCkuZHVyYXRpb24oMTAwMCkuc3R5bGUoJ2Rpc3BsYXknLCAnbm9uZScpO1xufVxuXG4vLyBjb25zdCBiYWNrMk1hcF9idXR0b24gPSBsaW5lR3JhcGhfZ3JvdXAuYXBwZW5kKFwicmVjdFwiKVxuLy8gICAgIC5hdHRyKFwiY2xhc3NcIiwgXCJiYWNrMk1hcF9idXR0b25cIilcbi8vICAgICAuYXR0cihcInRyYW5zZm9ybVwiLCBcInRyYW5zbGF0ZShcIiArIDExMDAgKyBcIixcIiArIDAgKyBcIilcIilcbi8vICAgICAuYXR0cignd2lkdGgnLCAxMDApXG4vLyAgICAgLmF0dHIoJ2hlaWdodCcsIDUwKVxuLy8gICAgIC5hdHRyKCdmaWxsJywgJ2xpZ2h0Ymx1ZScpXG4vLyAgICAgLm9uKCdjbGljaycsIGZ1bmN0aW9uICgpIHtcbi8vICAgICAgICAgLy8gdG9nZ2xlIHZpc2liaWxpdHlcbi8vICAgICAgICAgZDMuc2VsZWN0KCdzdmcnKS5zZWxlY3QoJyNtYXAnKS50cmFuc2l0aW9uKCkuZHVyYXRpb24oMTAwMCkuc3R5bGUoJ2Rpc3BsYXknLCAnYmxvY2snKTtcbi8vICAgICAgICAgZDMuc2VsZWN0KCdzdmcnKS5zZWxlY3QoJyNzbGlkZXInKS50cmFuc2l0aW9uKCkuZHVyYXRpb24oMTAwMCkuc3R5bGUoJ2Rpc3BsYXknLCAnYmxvY2snKTtcbi8vICAgICAgICAgbGluZUdyYXBoX2dyb3VwLmF0dHIoJ3Zpc2liaWxpdHknLCAnaGlkZGVuJyk7XG4vLyAgICAgfSk7XG5cbmZ1bmN0aW9uIGxvYWREYXRhc2V0KG1hcCwgZmlsZSwgZnVuYykge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgIGQzLmNzdihmaWxlLCBmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgICAgICAgZGF0YS5mb3JFYWNoKGZ1bmN0aW9uIChkKSB7XG4gICAgICAgICAgICAgICAgbGV0IHZhbHVlcyA9IHt9O1xuICAgICAgICAgICAgICAgIE9iamVjdC5rZXlzKGQpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoa2V5ICE9PSAnWWVhcicpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGtleS5zcGxpdCgnICcpLmpvaW4oJy0nKS5zcGxpdCgnKCcpLmpvaW4oJycpLnNwbGl0KCcpJykuam9pbignJykuc3BsaXQoJ1xcJycpLmpvaW4oJycpXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoaXNOYU4ocGFyc2VJbnQoZFtrZXldKSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZXNba2V5LnNwbGl0KCcgJykuam9pbignLScpXSA9IC0xO1xuICAgICAgICAgICAgICAgICAgICAgICAgfWVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlc1trZXkuc3BsaXQoJyAnKS5qb2luKCctJyldID0gZnVuYygrZFtrZXldKVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgbWFwLnNldChkLlllYXIsIHZhbHVlcylcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgcmVzb2x2ZSgpO1xuICAgICAgICB9KTtcbiAgICB9KTtcbn1cblxuUHJvbWlzZS5hbGwoW1xuICAgIGxvYWREYXRhc2V0KHdhdGVyX3N0cmVzc19sZXZlbHMsICcuL0RhdGEvd2F0ZXJfc3RyZXNzX2xldmVscy5jc3YnLCBmdW5jdGlvbiAodmFsKSB7XG4gICAgICAgIHJldHVybiAoKHZhbCAvIDEwMCkgKiA1KVxuICAgIH0pLFxuICAgIGxvYWREYXRhc2V0KHRvdGFsX2V4dGVybmFsX3dhdGVyLCAnLi9EYXRhL2V4dGVybmFsX3dhdGVyLmNzdicsIGZ1bmN0aW9uICh2YWwpIHtcbiAgICAgICAgcmV0dXJuIHZhbFxuICAgIH0pLFxuICAgIGxvYWREYXRhc2V0KHRvdGFsX2ludGVybmFsX3dhdGVyLCAnLi9EYXRhL2ludGVybmFsX3dhdGVyLmNzdicsIGZ1bmN0aW9uICh2YWwpIHtcbiAgICAgICAgcmV0dXJuIHZhbFxuICAgIH0pLFxuICAgIGxvYWREYXRhc2V0KHRvdGFsX3dhdGVyX3VzZWQsICcuL0RhdGEvd2F0ZXJfd2l0aGRyYXdzLmNzdicsIGZ1bmN0aW9uICh2YWwpIHtcbiAgICAgICAgcmV0dXJuIHZhbFxuICAgIH0pLFxuXSkudGhlbih2YWx1ZXMgPT4ge1xuICAgIGNvbnNvbGUubG9nKHdhdGVyX3N0cmVzc19sZXZlbHMpXG4gICAgcmVuZGVyTWFwKHdhdGVyX3N0cmVzc19sZXZlbHMuZ2V0KCcxOTc4LTE5ODInKSk7XG4gICAgY3JlYXRlU2xpZGVyKCk7XG4gICAgLy8gbGluZUNoYXJ0KCk7XG59KTtcblxuXG4iXSwibWFwcGluZ3MiOiI7Ozs7OztBQWFBO0FBTUE7QUFDQTtBQXBCQTtBQUNBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./scripts/index.js\n");

/***/ }),

/***/ "./scripts/line_chart.js":
/*!*******************************!*\
  !*** ./scripts/line_chart.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.renderLineChart = renderLineChart;\n\nvar _index = __webpack_require__(/*! ./index */ \"./scripts/index.js\");\n\nvar utils = _interopRequireWildcard(_index);\n\nvar _variables = __webpack_require__(/*! ./variables */ \"./scripts/variables.js\");\n\nvar _map = __webpack_require__(/*! ./map */ \"./scripts/map.js\");\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n//Sets axis scales\nvar x = d3.scaleTime().range([0, _variables.width]),\n    y = d3.scaleLinear().range([_variables.height, 0]),\n    z = d3.scaleOrdinal(d3.schemeCategory10);\n\n//Line generator, where the lives are curved\nvar line = d3.line().curve(d3.curveBasis).x(function (d) {\n    return x(d.date);\n}).y(function (d) {\n    return y(d.energy);\n});\n\n//https://bl.ocks.org/d3noob/c506ac45617cf9ed39337f99f8511218\n//Gridlines in x axis function\nfunction make_x_gridlines() {\n    return d3.axisBottom(x).ticks(5);\n}\n\n//https://bl.ocks.org/d3noob/c506ac45617cf9ed39337f99f8511218\n//Gridlines in y axis function\nfunction make_y_gridlines() {\n    return d3.axisLeft(y).ticks(8);\n}\n\n//https://sureshlodha.github.io/CMPS263_Winter2018/CMPS263FinalProjects/Pres criptionDrugs/index.html\nfunction tweenDashoffsetOn() {\n    var l = this.getTotalLength(),\n        i = d3.interpolateString('' + l, '0');\n    return function (t) {\n        return i(t);\n    };\n}\n\nfunction tweenDashoffsetOff() {\n    var l = this.getTotalLength(),\n        i = d3.interpolateString('0', '' + l);\n    return function (t) {\n        return i(t);\n    };\n}\n\n//https://bl.ocks.org/larsenmtl/e3b8b7c2ca4787f77d78f58d41c3da91\nfunction mouseOver(countries) {\n    //Add new element to the DOM\n    var mouseG = g.append('g').attr('class', 'mouse-over-effects');\n\n    //This is the black vertical line to follow mouse\n    mouseG.append('path').attr('class', 'mouse-line').style('stroke', 'black').style('stroke-width', '1px').style('opacity', '0');\n\n    //Get all the lines in the DOM\n    var lines = document.getElementsByClassName('line');\n\n    //Adds new elements to the DOM for each country\n    var mousePerLine = mouseG.selectAll('.mouse-per-line').data(countries).enter().append('g').attr('class', 'country mouse-per-line').attr('id', function (d) {\n        return d.id.split(' ').join('_');\n    });\n\n    //Adds circles on visible lines\n    mousePerLine.append('circle').attr('r', 7).style('stroke', function (d) {\n        return z(d.id);\n    }).style('fill', 'none').style('stroke-width', '1px').style('opacity', '0').style('visibility', 'hidden').filter(function (d) {\n        //Only shows the circles for selected countries\n        return d.display;\n    }).style('visibility', 'visible');\n\n    //Adds text next to the circles for visible lines which show the current value\n    mousePerLine.append('text').attr('transform', 'translate(10,3)').style('font', '12px sans-serif').style('visibility', 'hidden').filter(function (d) {\n        //Only shows the values for selected countries\n        return d.display;\n    }).style('visibility', 'visible');\n\n    mouseG.append('svg:rect') //Append a rect to catch mouse movements on canvas\n    .attr('width', _variables.width) //Can't catch mouse events on a g element\n    .attr('height', _variables.height).attr('fill', 'none').attr('pointer-events', 'all').on('mouseout', function () {\n        //On mouse out hide line, circles and text\n        d3.select('.mouse-line').style('opacity', '0');\n        d3.selectAll('.mouse-per-line circle').style('opacity', '0');\n        d3.selectAll('.mouse-per-line text').style('opacity', '0');\n    }).on('mouseover', function () {\n        //On mouse in show line, circles and text\n        d3.select('.mouse-line').style('opacity', '1');\n        d3.selectAll('.mouse-per-line circle').style('opacity', '1');\n        d3.selectAll('.mouse-per-line text').style('opacity', '1');\n    }).on('mousemove', function () {\n        //Mouse moving over canvas\n        var mouse = d3.mouse(this);\n        d3.select('.mouse-line').attr('d', function () {\n            var d = 'M' + mouse[0] + ',' + _variables.height;\n            d += ' ' + mouse[0] + ',' + 0;\n            return d;\n        });\n\n        d3.selectAll('.mouse-per-line').attr('transform', function (d, i) {\n            var xDate = x.invert(mouse[0]),\n                bisect = d3.bisector(function (d) {\n                return d.date;\n            }).right;\n            idx = bisect(d.values, xDate);\n\n            var beginning = 0,\n                end = lines[i].getTotalLength(),\n                target = null;\n\n            while (true) {\n                target = Math.floor((beginning + end) / 2);\n                pos = lines[i].getPointAtLength(target);\n                if ((target === end || target === beginning) && pos.x !== mouse[0]) {\n                    break;\n                }\n                if (pos.x > mouse[0]) end = target;else if (pos.x < mouse[0]) beginning = target;else break; //position found\n            }\n\n            d3.select(this).select('text').text(y.invert(pos.y).toFixed(2));\n\n            return 'translate(' + mouse[0] + ',' + pos.y + ')';\n        });\n    });\n}\n\nfunction drawGrid() {\n    //Add the X gridlines\n    utils.svg.append('g').attr('class', 'grid').attr('transform', 'translate(' + _variables.margin.left + ',' + (_variables.height + _variables.margin.top) + ')').call(make_x_gridlines().tickSize(-_variables.height).tickFormat(''));\n    //Add the Y gridlines\n    utils.svg.append('g').attr('class', 'grid').attr('transform', 'translate(' + _variables.margin.left + ',' + _variables.margin.top + ')').call(make_y_gridlines().tickSize(-_variables.width).tickFormat(''));\n}\n\nfunction drawLines(g, countries) {\n\n    //Add new element to the DOM for each country\n    var country = g.selectAll('.country').data(countries).enter().append('g').attr('class', 'country').attr('id', function (d) {\n        return d.id.split(' ').join('_');\n    });\n\n    //Adds new path elements to the DOM for each country\n    country.append('path').attr('class', 'line').attr('d', function (d) {\n        return line(d.values); // uses the line generator\n    }).attr('fill', 'none').style('stroke', function (d) {\n        return z(d.id);\n    });\n\n    //Adds the country name at the end of the line\n    country.append('text').datum(function (d) {\n        //Allows the binding of country data to multiple SVG elements\n        return { id: d.id, display: d.display, value: d.values[d.values.length - 1] };\n    }).attr('transform', function (d) {\n        return 'translate(' + x(d.value.date) + ',' + y(d.value.energy) + ')';\n    }).attr('x', 3).attr('dy', '0.35em').style('font', '10px sans-serif').text(function (d) {\n        return d.id;\n    }).style('text-anchor', 'start').style('opacity', 0).filter(function (d) {\n        //Only shows the country names for selected countries\n        return d.display;\n    }).transition().duration(2000).style('opacity', 1);\n\n    //Adds the animations to the lines\n    //http://bl.ocks.org/duopixel/4063326\n    var paths = country.select('path').each(function () {\n        d3.select(this).attr('stroke-dasharray', this.getTotalLength() + ',' + this.getTotalLength()).attr('stroke-dashoffset', '' + this.getTotalLength());\n    });\n    paths.filter(function (d) {\n        // only shows the lines for selected countries\n        return d.display;\n    }).transition().duration(2000).attrTween('stroke-dashoffset', tweenDashoffsetOn);\n}\n\nfunction drawAxis(g) {\n    //http://bl.ocks.org/duopixel/4063326\n\n    //Adds the x and y axis\n    g.append('g').attr('transform', 'translate(0,' + _variables.height + ')').call(d3.axisBottom(x)).append('text').attr('transform', 'translate(' + (_variables.width + 40) + ',' + 20 + ')').attr('fill', '#000').text('Year');\n\n    g.append('g').attr('class', 'axis axis--y').call(d3.axisLeft(y)).append('text').attr('transform', 'rotate(-90)').attr('y', 6).attr('dy', '0.71em').attr('fill', '#000');\n\n    //Adds the y axis title\n    utils.svg.append('text').attr('font-family', 'Sans-serif').attr('font-size', '0.8em').attr('transform', 'rotate(-90)').attr('x', 0 - _variables.height / 2).attr('dy', '1em').style('text-anchor', 'middle').text('Water Stress Level');\n}\n\nfunction create_domains(data) {\n    //Sets the domain of the axis's to appropriate values\n    x.domain([utils.parseTime('1978'), utils.parseTime('2040')]);\n    //https://bl.ocks.org/mbostock/3884955\n    y.domain([0, Math.max.apply(Math, Object.values(data))]);\n\n    // z.domain(data.map(function (c) {\n    //     return c.id\n    // }));\n}\n\n// function readCSV () {\n//     d3.csv('EPC_2000_2010.csv', function (error, data) {\n//         if (error) throw error\n//         let countries = formatData(data)\n//         draw(countries)\n//     })\n//\n// }\n\n//https://sureshlodha.github.io/CMPS263_Winter2018/CMPS263FinalProjects/Pres criptionDrugs/index.html\nfunction checkChanged() {\n    var checked = this.checked;\n\n    //Get the id and name of the selected country\n    var countryID = this.getAttribute('countryID');\n    var country = this.getAttribute('country');\n\n    //Selects all elements with the ID matching the selected country\n    var g = d3.select('#' + countryID);\n\n    if (!checked) {\n        //Remove the text, line and circle/value of the selected country\n        g.select('text').transition().duration(1000).style('opacity', 0);\n        g.select('path').transition().duration(2000).attrTween('stroke-dashoffset', tweenDashoffsetOff);\n        //Select elements deeper in the DOM\n        d3.select('.mouse-over-effects').select('#' + countryID).selectAll('circle').style('visibility', 'hidden');\n        d3.select('.mouse-over-effects').select('#' + countryID).selectAll('text').style('visibility', 'hidden');\n        _variables.display_country[country].display = false;\n    } else {\n        //Add the text, line and circle/value of the selected country\n        g.select('text').transition().duration(1000).style('opacity', 1);\n        g.select('path').transition().duration(2000).attrTween('stroke-dashoffset', tweenDashoffsetOn);\n        //Select elements deeper in the DOM\n        d3.select('.mouse-over-effects').select('#' + countryID).selectAll('circle').style('visibility', 'visible');\n        d3.select('.mouse-over-effects').select('#' + countryID).selectAll('text').style('visibility', 'visible');\n        _variables.display_country[country].display = true;\n    }\n}\n\n//https://sureshlodha.github.io/CMPS263_Winter2018/CMPS263FinalProjects/Pres criptionDrugs/index.html\nfunction drawCheckboxes(countries) {\n\n    //Selects the checkbox element from the doom and appends a new element to it for each country\n    var checkboxes = d3.select('.country-list').selectAll('.country-checkbox').data(countries).enter().append('li').attr('class', 'country-checkbox');\n\n    //Add a checkbox to each li element\n    checkboxes.append('input').attr('type', 'checkbox').attr('country', function (d) {\n        return d.id;\n    }).attr('id', function (d) {\n        return d.id.split(' ').join('_') + '_checkbox';\n    }).attr('countryID', function (d) {\n        return d.id.split(' ').join('_');\n    }).on('change', checkChanged) // Call checkChanged when changed\n    .filter(function (d) {\n        return d.display;\n    }).each(function (d) {\n        d3.select(this).attr('checked', true);\n    });\n\n    //Add a label to each checkbox\n    checkboxes.append('label').attr('for', function (d) {\n        return d.id.split(' ').join('_') + '_checkbox';\n    }).text(function (d) {\n        return d.id;\n    });\n}\n\nfunction renderLineChart(data) {\n    var g = utils.svg.append('g').attr('id', 'line_chart').attr('transform', 'translate(' + _variables.margin.left + ',' + _variables.margin.top + ')');\n    drawGrid();\n    drawAxis(g);\n    create_domains(data);\n    drawLines(data);\n}\n\n// const lineGraph_group = svg.append('g').attr('visibility', 'hidden');\n//\n\n//\n//\n// lineGraph_group.append(\"text\")\n//     .attr(\"class\", \"back_label\")\n//     .attr(\"transform\", \"translate(\" + 1150 + \",\" + 30 + \")\")\n//     .attr(\"fill\", \"black\")\n//     .attr(\"text-anchor\", \"middle\")\n//     .attr(\"pointer-events\", \"none\")\n//     .text(\"Back\");\n//\n//\n//\n// function lineChart() {\n//     d3.csv(\"./Data/current.csv\", function (error1, data1) {\n//         d3.csv(\"./Data/predicted.csv\", function (error2, data2) {\n//             data1.forEach(function (d) {\n//                 d.year = parseTime(d.year);\n//                 d.score = +d.score;\n//             });\n//\n//             data2.forEach(function (d) {\n//                 d.year = parseTime(d.year);\n//                 d.pessimistic = +d.pessimistic;\n//                 d.optimistic = +d.optimistic;\n//                 d.bau = +d.bau;\n//             });\n//\n//             xScale = d3.scaleTime()\n//                 .domain([\n//                     d3.min(data1, function (d) {\n//                         return d.year;\n//                     }),\n//                     d3.max(data2, function (d) {\n//                         return d.year;\n//                     })\n//                 ])\n//                 .range([padding + 100, width - 100]);\n//\n//             yScale = d3.scaleLinear()\n//                 .domain([0, 5])\n//                 .range([height - 40, padding]);\n//\n//             //Define axes\n//             xAxis = d3.axisBottom()\n//                 .scale(xScale)\n//                 .ticks(10)\n//                 .tickFormat(formatTime);\n//\n//             //Define Y axis\n//             yAxis = d3.axisLeft()\n//                 .scale(yScale)\n//                 .ticks(5);\n//\n//             //Define line generators\n//             line = d3.line()\n//                 .defined(function (d) {\n//                     return d.year >= parseTime(1960) && d.year <= parseTime(2015);\n//                 })\n//                 .x(function (d) {\n//                     return xScale(d.year);\n//                 })\n//                 .y(function (d) {\n//                     return yScale(d.score);\n//                 });\n//\n//             pessimisticLine = d3.line()\n//                 .defined(function (d) {\n//                     return d.year >= parseTime(2015);\n//                 })\n//                 .x(function (d) {\n//                     return xScale(d.year);\n//                 })\n//                 .y(function (d) {\n//                     return yScale(d.pessimistic);\n//                 });\n//\n//             optimisticLine = d3.line()\n//                 .defined(function (d) {\n//                     return d.year >= parseTime(2015);\n//                 })\n//                 .x(function (d) {\n//                     return xScale(d.year);\n//                 })\n//                 .y(function (d) {\n//                     return yScale(d.optimistic);\n//                 });\n//\n//             bauLine = d3.line()\n//                 .defined(function (d) {\n//                     return d.year >= parseTime(2015);\n//                 })\n//                 .x(function (d) {\n//                     return xScale(d.year);\n//                 })\n//                 .y(function (d) {\n//                     return yScale(d.bau);\n//                 });\n//\n//\n//             //Draw predicted line\n//             lineGraph_group.append(\"line\")\n//                 .attr(\"class\", \"line predicted\")\n//                 .attr(\"x1\", xScale(parseTime(2015)))\n//                 .attr(\"x2\", xScale(parseTime(2015)))\n//                 .attr(\"y1\", padding)\n//                 .attr(\"y2\", height);\n//\n//             //Label predicted line\n//             lineGraph_group.append(\"text\")\n//                 .attr(\"class\", \"predictedLabel\")\n//                 .attr(\"x\", xScale(parseTime(2015)))\n//                 .attr(\"y\", padding)\n//                 .text(\"Predicted\");\n//\n//\n//             //Create lines\n//             lineGraph_group.append(\"path\")\n//                 .datum(data1)\n//                 .attr(\"class\", \"line\")\n//                 .attr(\"d\", line);\n//\n//\n//             lineGraph_group.append(\"path\")\n//                 .datum(data2)\n//                 .attr(\"class\", \"line pessimistic\")\n//                 .attr(\"d\", pessimisticLine);\n//\n//             lineGraph_group.append(\"path\")\n//                 .datum(data2)\n//                 .attr(\"class\", \"line optimistic\")\n//                 .attr(\"d\", optimisticLine);\n//\n//             lineGraph_group.append(\"path\")\n//                 .datum(data2)\n//                 .attr(\"class\", \"line bau\")\n//                 .attr(\"d\", bauLine);\n//\n//             //Create axes\n//             lineGraph_group.append(\"g\")\n//                 .attr(\"class\", \"axis\")\n//                 .attr(\"transform\", \"translate(0,\" + (height - padding) + \")\")\n//                 .call(xAxis);\n//\n//             lineGraph_group.append(\"g\")\n//                 .attr(\"class\", \"axis\")\n//                 .attr(\"transform\", \"translate(\" + (padding + 100) + \",0)\")\n//                 .call(yAxis);\n//\n//         });\n//     });\n// }//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./scripts/line_chart.js\n");

/***/ }),

/***/ "./scripts/map.js":
/*!************************!*\
  !*** ./scripts/map.js ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.color = exports.path = exports.projection = undefined;\nexports.renderMap = renderMap;\nexports.updateMap = updateMap;\n\nvar _index = __webpack_require__(/*! ./index */ \"./scripts/index.js\");\n\nvar utils = _interopRequireWildcard(_index);\n\nvar _variables = __webpack_require__(/*! ./variables */ \"./scripts/variables.js\");\n\nvar _line_chart = __webpack_require__(/*! ./line_chart */ \"./scripts/line_chart.js\");\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nvar projection = exports.projection = d3.geoMiller().scale(150).translate([_variables.width / 2, _variables.height / 1.8]);\n\nvar path = exports.path = d3.geoPath().projection(projection);\n\nvar color = exports.color = d3.scaleThreshold().domain([1, 2, 3, 4, 5]).range(d3.schemeReds[5]);\n\nvar xDensity = d3.scaleSqrt().domain([0, 5]).rangeRound([440, 600]);\n\nvar xPos = [440, 480, 520, 560, 600];\n\nvar scale = d3.scaleLinear().domain([0, 5]).range([440, 640]);\n\nvar counter = 0;\n\nvar map;\n\nvar colours = {};\n\nfunction renderMap(data) {\n\n    d3.json('./Data/countries.geojson', function (error, mapData) {\n        var features = mapData.features;\n        map = utils.svg.append('g').attr('id', 'map').attr('class', 'countries').style('display', 'block').selectAll('path').data(features).enter().append('path').attr('d', path).attr('id', function (d) {\n            return d.properties.name;\n        }).style('stroke', \"#FFF\").style('fill', function (d) {\n            var value = data[d.properties.name];\n            if (value === -1 || value === undefined) return \"#ccc\";else {\n                var c = color(data[d.properties.name]);\n                var country_names = void 0;\n                if (colours[c] === undefined) country_names = [];else country_names = colours[c];\n                country_names.push(d.properties.name);\n                colours[c] = country_names;\n                return c;\n            }\n        }).on(\"mouseover\", function (d) {\n            var country_name = d.properties.name;\n            if (data[d.properties.name] !== -1 && data[d.properties.name] !== undefined) d3.select(this).style(\"fill\", \"orange\");\n        }).on(\"mouseout\", function (d) {\n            if (data[d.properties.name] !== -1 && data[d.properties.name] !== undefined) {\n                d3.select(this).style(\"fill\", function (d) {\n                    var c = color(data[d.properties.name]);\n                    return c;\n                });\n            }\n        }).on(\"click\", function (d) {\n            if (data[d.properties.name] !== -1 && data[d.properties.name] !== undefined) {\n                var country_name = d.properties.name;\n                console.log(\"clicked: \" + country_name);\n                utils.show_line_chart();\n                (0, _line_chart.renderLineChart)(data);\n            }\n        });\n    });\n\n    legend(colours);\n    bau();\n    optimistic();\n    pessimistic();\n}\n\nfunction updateMap(data) {\n\n    map.transition().duration(1000).style(\"fill\", function (d) {\n        //Get data value\n        var value = data[d.properties.name];\n        if (value === -1 || value === undefined) return \"#ccc\";else {\n            var c = color(data[d.properties.name]);\n            var country_names = void 0;\n            if (colours[c] === undefined) country_names = [];else country_names = colours[c];\n            country_names.push(d.properties.name);\n            colours[c] = country_names;\n            return c;\n        }\n    });\n\n    map.on(\"mouseover\", function (d) {\n        var country_name = d.properties.name;\n        if (data[d.properties.name] !== -1 && data[d.properties.name] !== undefined) d3.select(this).style(\"fill\", \"orange\");\n    }).on(\"mouseout\", function (d) {\n        if (data[d.properties.name] !== -1 && data[d.properties.name] !== undefined) {\n            d3.select(this).style(\"fill\", function (d) {\n                var c = color(data[d.properties.name]);\n                return c;\n            });\n        }\n    }).on(\"click\", function (d) {\n        if (data[d.properties.name] !== -1 && data[d.properties.name] !== undefined) {\n            var country_name = d.properties.name;\n            console.log(\"clicked: \" + country_name);\n            utils.show_line_chart();\n            (0, _line_chart.renderLineChart)(data);\n        }\n    });\n}\n\nfunction legend(c) {\n\n    var colours = c;\n    //Define legend\n    var legend = utils.svg.append(\"g\").attr(\"id\", \"key\").attr(\"transform\", \"translate(50,550)\");\n\n    var undefinedRect = utils.svg.append(\"g\").attr(\"id\", \"undefinedRect\").attr(\"transform\", \"translate(50,550)\");\n\n    //Setting up the legend\n    legend.selectAll(\"rect\").data(color.range().map(function (d) {\n        //mapping the color density value to the domain according to the data\n        //invert extent return all the values in the domain that corresponds the range\n        //looping through the domain, setting the range between each color bar\n        d = color.invertExtent(d);\n        if (d[0] == null) d[0] = xDensity.domain()[0]; //get the first and second value, storing then in the map\n        if (d[1] == null) d[1] = xDensity.domain()[1]; //this gets the range between each tick\n        return d;\n    })).enter().append(\"rect\").attr('id', function (d) {\n        return color(d[0]);\n    }).attr(\"height\", 8) //this creates the color bars between the values\n    .attr(\"x\", function (d) {\n        return xPos[d[0]];\n    }).attr(\"width\", 40).attr(\"fill\", function (d) {\n        return color(d[0]);\n    }).on(\"mouseover\", function (d) {\n        var previousElement = d3.select(this);\n        for (var key in colours) {\n            if (previousElement.attr(\"fill\") === key) {\n                previousElement.style(\"fill\", \"#ADD8E6\");\n                var i;\n                for (i = 0; i < colours[key].length; i++) {\n                    d3.select('svg').select('#map').select('#' + colours[key][i]).style(\"fill\", \"#ADD8E6\");\n                }\n            }\n        }\n    }).on(\"mouseout\", function (d) {\n        var previousElement = d3.select(this);\n        for (var key in colours) {\n            if (previousElement.attr(\"fill\") === key) {\n                previousElement.style(\"fill\", key);\n                var i;\n                for (i = 0; i < colours[key].length; i++) {\n                    d3.select('svg').select('#map').select('#' + colours[key][i]).style(\"fill\", key);\n                }\n            }\n        }\n    });\n\n    //adding the data value title\n    legend.append(\"text\").attr(\"class\", \"caption\").attr(\"x\", xDensity.range()[0]).attr(\"y\", -6).attr(\"fill\", \"#000\").attr(\"text-anchor\", \"start\").attr(\"font-weight\", \"bold\").text(\"Water Stress Score\");\n\n    //adding the value of the domain in the legend, creating the x axis using the x scale created for the data\n    //tick size is 13 so all the values of the domain will appear on page\n    legend.call(d3.axisBottom(scale).tickSize(13).tickValues(color.domain())).select(\".domain\").remove();\n}\n\nfunction bau() {\n\n    d3.select('#bau').on(\"click\", function (d) {\n\n        console.log(\"bau\");\n\n        //call updateData\n    });\n}\nfunction optimistic() {\n\n    d3.select('#optimistic').on(\"click\", function (d) {\n\n        console.log(\"optimistic\");\n\n        //call updateData\n    });\n}\n\nfunction pessimistic() {\n\n    d3.select('#pessimistic').on(\"click\", function (d) {\n\n        console.log(\"pessimistic\");\n\n        //call updateData\n    });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./scripts/map.js\n");

/***/ }),

/***/ "./scripts/slider.js":
/*!***************************!*\
  !*** ./scripts/slider.js ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.createSlider = createSlider;\n\nvar _index = __webpack_require__(/*! ./index */ \"./scripts/index.js\");\n\nvar utils = _interopRequireWildcard(_index);\n\nvar _variables = __webpack_require__(/*! ./variables */ \"./scripts/variables.js\");\n\nvar _map = __webpack_require__(/*! ./map */ \"./scripts/map.js\");\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction createSlider() {\n\n    var data3 = d3.range(0, Object.keys(_variables.years).length).map(function (d) {\n        return new Date(Object.keys(_variables.years)[d], 10, 3);\n    });\n\n    var slider3 = d3.sliderHorizontal().min(d3.min(data3)).max(d3.max(data3))\n    //        .step(1000 * 60 * 60 * 24 * 365 * 5)\n    .width(400).tickFormat(d3.timeFormat('%Y')).tickValues(data3).on('onchange', function (val) {\n        var keys = Object.keys(_variables.years);\n        var current_year = _variables.years[keys.reverse().find(function (e) {\n            return e <= utils.formatTime(val);\n        })];\n        if (current_year === \"2020\" || current_year === \"2030\" || current_year === \"2040\") {\n            d3.select('svg').select('#slider').select('.slider').select('.parameter-value').select('path').style('fill', '#8b0000');\n        } else {\n            d3.select('svg').select('#slider').select('.slider').select('.parameter-value').select('path').style('fill', 'white');\n        }\n        (0, _map.updateMap)(_variables.water_stress_levels.get(current_year));\n    });\n\n    utils.svg.append('g').attr('id', 'slider').attr(\"transform\", \"translate(\" + (_variables.width / 2 - _variables.slider_width / 2 + _variables.padding) + \", \" + _variables.height + \")\").attr('width', _variables.slider_width).attr('height', _variables.slider_height).call(slider3);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zY3JpcHRzL3NsaWRlci5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9zY3JpcHRzL3NsaWRlci5qcz84YjkwIl0sInNvdXJjZXNDb250ZW50IjpbIlxuaW1wb3J0ICogYXMgdXRpbHMgZnJvbSBcIi4vaW5kZXhcIjtcbmltcG9ydCB7d2lkdGgsIGhlaWdodCwgc2xpZGVyX2hlaWdodCwgc2xpZGVyX3dpZHRoLCB5ZWFycywgcGFkZGluZywgd2F0ZXJfc3RyZXNzX2xldmVsc30gZnJvbSBcIi4vdmFyaWFibGVzXCI7XG5pbXBvcnQge3VwZGF0ZU1hcH0gZnJvbSBcIi4vbWFwXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVTbGlkZXIoKSB7XG5cbiAgICBjb25zdCBkYXRhMyA9XG4gICAgICAgIGQzLnJhbmdlKDAsIE9iamVjdC5rZXlzKHllYXJzKS5sZW5ndGgpLm1hcChmdW5jdGlvbiAoZCkge1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBEYXRlKE9iamVjdC5rZXlzKHllYXJzKVtkXSwgMTAsIDMpO1xuICAgICAgICB9KTtcblxuICAgIGNvbnN0IHNsaWRlcjMgPSBkMy5zbGlkZXJIb3Jpem9udGFsKClcbiAgICAgICAgLm1pbihkMy5taW4oZGF0YTMpKVxuICAgICAgICAubWF4KGQzLm1heChkYXRhMykpXG4vLyAgICAgICAgLnN0ZXAoMTAwMCAqIDYwICogNjAgKiAyNCAqIDM2NSAqIDUpXG4gICAgICAgIC53aWR0aCg0MDApXG4gICAgICAgIC50aWNrRm9ybWF0KGQzLnRpbWVGb3JtYXQoJyVZJykpXG4gICAgICAgIC50aWNrVmFsdWVzKGRhdGEzKVxuICAgICAgICAub24oJ29uY2hhbmdlJywgdmFsID0+IHtcbiAgICAgICAgICAgIGxldCBrZXlzID0gT2JqZWN0LmtleXMoeWVhcnMpO1xuICAgICAgICAgICAgbGV0IGN1cnJlbnRfeWVhciA9IHllYXJzW2tleXMucmV2ZXJzZSgpLmZpbmQoZSA9PiBlIDw9IHV0aWxzLmZvcm1hdFRpbWUodmFsKSldO1xuICAgICAgICAgICAgaWYoY3VycmVudF95ZWFyID09PSBcIjIwMjBcIiB8fCBjdXJyZW50X3llYXIgPT09IFwiMjAzMFwiIHx8IGN1cnJlbnRfeWVhciA9PT0gXCIyMDQwXCIpe1xuICAgICAgICAgICAgICAgIGQzLnNlbGVjdCgnc3ZnJylcbiAgICAgICAgICAgICAgICAgICAgLnNlbGVjdCgnI3NsaWRlcicpXG4gICAgICAgICAgICAgICAgICAgIC5zZWxlY3QoJy5zbGlkZXInKVxuICAgICAgICAgICAgICAgICAgICAuc2VsZWN0KCcucGFyYW1ldGVyLXZhbHVlJylcbiAgICAgICAgICAgICAgICAgICAgLnNlbGVjdCgncGF0aCcpXG4gICAgICAgICAgICAgICAgICAgIC5zdHlsZSgnZmlsbCcsICcjOGIwMDAwJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNle1xuICAgICAgICAgICAgICAgIGQzLnNlbGVjdCgnc3ZnJylcbiAgICAgICAgICAgICAgICAgICAgLnNlbGVjdCgnI3NsaWRlcicpXG4gICAgICAgICAgICAgICAgICAgIC5zZWxlY3QoJy5zbGlkZXInKVxuICAgICAgICAgICAgICAgICAgICAuc2VsZWN0KCcucGFyYW1ldGVyLXZhbHVlJylcbiAgICAgICAgICAgICAgICAgICAgLnNlbGVjdCgncGF0aCcpXG4gICAgICAgICAgICAgICAgICAgIC5zdHlsZSgnZmlsbCcsICd3aGl0ZScpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdXBkYXRlTWFwKHdhdGVyX3N0cmVzc19sZXZlbHMuZ2V0KGN1cnJlbnRfeWVhcikpO1xuICAgICAgICB9KTtcblxuXG4gICAgdXRpbHMuc3ZnLmFwcGVuZCgnZycpXG4gICAgICAgIC5hdHRyKCdpZCcsICdzbGlkZXInKVxuICAgICAgICAuYXR0cihcInRyYW5zZm9ybVwiLCBcInRyYW5zbGF0ZShcIiArICgod2lkdGggLyAyKSAtIChzbGlkZXJfd2lkdGggLyAyKSArIHBhZGRpbmcpICsgXCIsIFwiICsgKGhlaWdodCkgKyBcIilcIilcbiAgICAgICAgLmF0dHIoJ3dpZHRoJywgc2xpZGVyX3dpZHRoKVxuICAgICAgICAuYXR0cignaGVpZ2h0Jywgc2xpZGVyX2hlaWdodClcbiAgICAgICAgLmNhbGwoc2xpZGVyMyk7XG59XG5cbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFLQTtBQUNBO0FBTEE7QUFDQTtBQURBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFDQTs7O0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFHQTtBQUhBO0FBUUE7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBTUE7QUFFQTtBQU1BO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFNQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./scripts/slider.js\n");

/***/ }),

/***/ "./scripts/variables.js":
/*!******************************!*\
  !*** ./scripts/variables.js ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar width = exports.width = 1200,\n    height = exports.height = 600;\nvar slider_width = exports.slider_width = 500,\n    slider_height = exports.slider_height = 100;\nvar padding = exports.padding = 40;\nvar margin = exports.margin = { top: 20, right: 80, bottom: 30, left: 70 };\n\nvar total_internal_water = exports.total_internal_water = new Map();\nvar total_external_water = exports.total_external_water = new Map();\nvar total_available_water = exports.total_available_water = new Map();\nvar total_water_used = exports.total_water_used = new Map();\nvar water_stress_levels = exports.water_stress_levels = new Map();\n\nvar years = exports.years = {\n    1978: '1978-1982',\n    1983: '1983-1987',\n    1988: '1988-1992',\n    1993: '1993-1997',\n    1998: '1998-2002',\n    2003: '2003-2007',\n    2008: '2008-2012',\n    2013: '2013-2017',\n    2020: '2020',\n    2030: '2030',\n    2040: '2040'\n};\n\nvar display_country = exports.display_country = {\n    \"Afghanistan\": { display: false },\n    \"Albania\": { display: false },\n    \"Algeria\": { display: false },\n    \"Angola\": { display: false },\n    \"Antigua-and-Barbuda\": { display: false },\n    \"Argentina\": { display: false },\n    \"Armenia\": { display: false },\n    \"Australia\": { display: false },\n    \"Austria\": { display: false },\n    \"Azerbaijan\": { display: false },\n    \"Bahrain\": { display: false },\n    \"Bangladesh\": { display: false },\n    \"Barbados\": { display: false },\n    \"Belarus\": { display: false },\n    \"Belgium\": { display: false },\n    \"Belize\": { display: false },\n    \"Benin\": { display: false },\n    \"Bhutan\": { display: false },\n    \"Bolivia-Plurinational-State-of\": { display: false },\n    \"Bosnia-and-Herzegovina\": { display: false },\n    \"Botswana\": { display: false },\n    \"Brazil\": { display: false },\n    \"Brunei-Darussalam\": { display: false },\n    \"Bulgaria\": { display: false },\n    \"Burkina-Faso\": { display: false },\n    \"Burundi\": { display: false },\n    \"Cabo-Verde\": { display: false },\n    \"Cambodia\": { display: false },\n    \"Cameroon\": { display: false },\n    \"Canada\": { display: false },\n    \"Central-African-Republic\": { display: false },\n    \"Chad\": { display: false },\n    \"Chile\": { display: false },\n    \"China\": { display: false },\n    \"Colombia\": { display: false },\n    \"Comoros\": { display: false },\n    \"Congo\": { display: false },\n    \"Costa-Rica\": { display: false },\n    \"Cote-dIvoire\": { display: false },\n    \"Croatia\": { display: false },\n    \"Cuba\": { display: false },\n    \"Cyprus\": { display: false },\n    \"Czechia\": { display: false },\n    \"Democratic-People's-Republic-of-Korea\": { display: false },\n    \"Democratic-Republic-of-the-Congo\": { display: false },\n    \"Denmark\": { display: false },\n    \"Djibouti\": { display: false },\n    \"Dominica\": { display: false },\n    \"Dominican-Republic\": { display: false },\n    \"Ecuador\": { display: false },\n    \"Egypt\": { display: false },\n    \"El-Salvador\": { display: false },\n    \"Equatorial-Guinea\": { display: false },\n    \"Eritrea\": { display: false },\n    \"Estonia\": { display: false },\n    \"Ethiopia\": { display: false },\n    \"Fiji\": { display: false },\n    \"Finland\": { display: false },\n    \"France\": { display: false },\n    \"Gabon\": { display: false },\n    \"Gambia\": { display: false },\n    \"Georgia\": { display: false },\n    \"Germany\": { display: false },\n    \"Ghana\": { display: false },\n    \"Greece\": { display: false },\n    \"Grenada\": { display: false },\n    \"Guatemala\": { display: false },\n    \"Guinea\": { display: false },\n    \"Guinea-Bissau\": { display: false },\n    \"Guyana\": { display: false },\n    \"Haiti\": { display: false },\n    \"Honduras\": { display: false },\n    \"Hungary\": { display: false },\n    \"Iceland\": { display: false },\n    \"India\": { display: false },\n    \"Indonesia\": { display: false },\n    \"Iran-Islamic-Republic-of\": { display: false },\n    \"Iraq\": { display: false },\n    \"Ireland\": { display: false },\n    \"Israel\": { display: false },\n    \"Italy\": { display: false },\n    \"Jamaica\": { display: false },\n    \"Japan\": { display: false },\n    \"Jordan\": { display: false },\n    \"Kazakhstan\": { display: false },\n    \"Kenya\": { display: false },\n    \"Kuwait\": { display: false },\n    \"Kyrgyzstan\": { display: false },\n    \"Lao-Peoples-Democratic-Republic\": { display: false },\n    \"Latvia\": { display: false },\n    \"Lebanon\": { display: false },\n    \"Lesotho\": { display: false },\n    \"Liberia\": { display: false },\n    \"Libya\": { display: false },\n    \"Lithuania\": { display: false },\n    \"Luxembourg\": { display: false },\n    \"Madagascar\": { display: false },\n    \"Malawi\": { display: false },\n    \"Malaysia\": { display: false },\n    \"Maldives\": { display: false },\n    \"Mali\": { display: false },\n    \"Malta\": { display: false },\n    \"Mauritania\": { display: false },\n    \"Mauritius\": { display: false },\n    \"Mexico\": { display: false },\n    \"Mongolia\": { display: false },\n    \"Morocco\": { display: false },\n    \"Mozambique\": { display: false },\n    \"Myanmar\": { display: false },\n    \"Namibia\": { display: false },\n    \"Nepal\": { display: false },\n    \"Netherlands\": { display: false },\n    \"New-Zealand\": { display: false },\n    \"Nicaragua\": { display: false },\n    \"Niger\": { display: false },\n    \"Nigeria\": { display: false },\n    \"Norway\": { display: false },\n    \"Occupied-Palestinian-Territory\": { display: false },\n    \"Oman\": { display: false },\n    \"Pakistan\": { display: false },\n    \"Panama\": { display: false },\n    \"Papua-New-Guinea\": { display: false },\n    \"Paraguay\": { display: false },\n    \"Peru\": { display: false },\n    \"Philippines\": { display: false },\n    \"Poland\": { display: false },\n    \"Portugal\": { display: false },\n    \"Puerto-Rico\": { display: false },\n    \"Qatar\": { display: false },\n    \"Republic-of-Korea\": { display: false },\n    \"Republic-of-Moldova\": { display: false },\n    \"Romania\": { display: false },\n    \"Russian-Federation\": { display: false },\n    \"Rwanda\": { display: false },\n    \"Saint-Kitts-and-Nevis\": { display: false },\n    \"Saint-Lucia\": { display: false },\n    \"Saint-Vincent-and-the-Grenadines\": { display: false },\n    \"Sao-Tome-and-Principe\": { display: false },\n    \"Saudi-Arabia\": { display: false },\n    \"Senegal\": { display: false },\n    \"Serbia\": { display: false },\n    \"Sierra-Leone\": { display: false },\n    \"Slovakia\": { display: false },\n    \"Slovenia\": { display: false },\n    \"Somalia\": { display: false },\n    \"South-Africa\": { display: false },\n    \"South-Sudan\": { display: false },\n    \"Spain\": { display: false },\n    \"Sri-Lanka\": { display: false },\n    \"Sudan\": { display: false },\n    \"Suriname\": { display: false },\n    \"Swaziland\": { display: false },\n    \"Sweden\": { display: false },\n    \"Switzerland\": { display: false },\n    \"Syrian-Arab-Republic\": { display: false },\n    \"Tajikistan\": { display: false },\n    \"Thailand\": { display: false },\n    \"The-former-Yugoslav-Republic-of-Macedonia\": { display: false },\n    \"Timor-Leste\": { display: false },\n    \"Togo\": { display: false },\n    \"Trinidad and Tobago\": { display: false },\n    \"Tunisia\": { display: false },\n    \"Turkey\": { display: false },\n    \"Turkmenistan\": { display: false },\n    \"Uganda\": { display: false },\n    \"Ukraine\": { display: false },\n    \"United-Arab-Emirates\": { display: false },\n    \"United-Kingdom\": { display: false },\n    \"United-Republic-of-Tanzania\": { display: false },\n    \"United-States-of-America\": { display: false },\n    \"Uruguay\": { display: false },\n    \"Uzbekistan\": { display: false },\n    \"Venezuela-Bolivarian-Republic-of\": { display: false },\n    \"Viet-Nam\": { display: false },\n    \"Yemen\": { display: false },\n    \"Zambia\": { display: false },\n    \"Zimbabwe\": { display: false },\n    \"Greenland\": { display: false }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zY3JpcHRzL3ZhcmlhYmxlcy5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9zY3JpcHRzL3ZhcmlhYmxlcy5qcz8wMjFlIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCB3aWR0aCA9IDEyMDAsIGhlaWdodCA9IDYwMDtcbmV4cG9ydCBjb25zdCBzbGlkZXJfd2lkdGggPSA1MDAsIHNsaWRlcl9oZWlnaHQgPSAxMDA7XG5leHBvcnQgY29uc3QgcGFkZGluZyA9IDQwO1xuZXhwb3J0IGNvbnN0IG1hcmdpbiA9IHt0b3A6IDIwLCByaWdodDogODAsIGJvdHRvbTogMzAsIGxlZnQ6IDcwfTtcblxuZXhwb3J0IGxldCB0b3RhbF9pbnRlcm5hbF93YXRlciA9IG5ldyBNYXAoKTtcbmV4cG9ydCBsZXQgdG90YWxfZXh0ZXJuYWxfd2F0ZXIgPSBuZXcgTWFwKCk7XG5leHBvcnQgbGV0IHRvdGFsX2F2YWlsYWJsZV93YXRlciA9IG5ldyBNYXAoKTtcbmV4cG9ydCBsZXQgdG90YWxfd2F0ZXJfdXNlZCA9IG5ldyBNYXAoKTtcbmV4cG9ydCBsZXQgd2F0ZXJfc3RyZXNzX2xldmVscyA9IG5ldyBNYXAoKTtcblxuXG5leHBvcnQgY29uc3QgeWVhcnMgPSB7XG4gICAgMTk3ODogJzE5NzgtMTk4MicsXG4gICAgMTk4MzogJzE5ODMtMTk4NycsXG4gICAgMTk4ODogJzE5ODgtMTk5MicsXG4gICAgMTk5MzogJzE5OTMtMTk5NycsXG4gICAgMTk5ODogJzE5OTgtMjAwMicsXG4gICAgMjAwMzogJzIwMDMtMjAwNycsXG4gICAgMjAwODogJzIwMDgtMjAxMicsXG4gICAgMjAxMzogJzIwMTMtMjAxNycsXG4gICAgMjAyMDogJzIwMjAnLFxuICAgIDIwMzA6ICcyMDMwJyxcbiAgICAyMDQwOiAnMjA0MCcsXG59O1xuXG5leHBvcnQgY29uc3QgZGlzcGxheV9jb3VudHJ5ID0ge1xuICAgIFwiQWZnaGFuaXN0YW5cIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIkFsYmFuaWFcIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIkFsZ2VyaWFcIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIkFuZ29sYVwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiQW50aWd1YS1hbmQtQmFyYnVkYVwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiQXJnZW50aW5hXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJBcm1lbmlhXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJBdXN0cmFsaWFcIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIkF1c3RyaWFcIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIkF6ZXJiYWlqYW5cIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIkJhaHJhaW5cIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIkJhbmdsYWRlc2hcIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIkJhcmJhZG9zXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJCZWxhcnVzXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJCZWxnaXVtXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJCZWxpemVcIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIkJlbmluXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJCaHV0YW5cIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIkJvbGl2aWEtUGx1cmluYXRpb25hbC1TdGF0ZS1vZlwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiQm9zbmlhLWFuZC1IZXJ6ZWdvdmluYVwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiQm90c3dhbmFcIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIkJyYXppbFwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiQnJ1bmVpLURhcnVzc2FsYW1cIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIkJ1bGdhcmlhXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJCdXJraW5hLUZhc29cIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIkJ1cnVuZGlcIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIkNhYm8tVmVyZGVcIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIkNhbWJvZGlhXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJDYW1lcm9vblwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiQ2FuYWRhXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJDZW50cmFsLUFmcmljYW4tUmVwdWJsaWNcIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIkNoYWRcIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIkNoaWxlXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJDaGluYVwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiQ29sb21iaWFcIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIkNvbW9yb3NcIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIkNvbmdvXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJDb3N0YS1SaWNhXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJDb3RlLWRJdm9pcmVcIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIkNyb2F0aWFcIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIkN1YmFcIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIkN5cHJ1c1wiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiQ3plY2hpYVwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiRGVtb2NyYXRpYy1QZW9wbGUncy1SZXB1YmxpYy1vZi1Lb3JlYVwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiRGVtb2NyYXRpYy1SZXB1YmxpYy1vZi10aGUtQ29uZ29cIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIkRlbm1hcmtcIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIkRqaWJvdXRpXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJEb21pbmljYVwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiRG9taW5pY2FuLVJlcHVibGljXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJFY3VhZG9yXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJFZ3lwdFwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiRWwtU2FsdmFkb3JcIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIkVxdWF0b3JpYWwtR3VpbmVhXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJFcml0cmVhXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJFc3RvbmlhXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJFdGhpb3BpYVwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiRmlqaVwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiRmlubGFuZFwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiRnJhbmNlXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJHYWJvblwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiR2FtYmlhXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJHZW9yZ2lhXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJHZXJtYW55XCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJHaGFuYVwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiR3JlZWNlXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJHcmVuYWRhXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJHdWF0ZW1hbGFcIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIkd1aW5lYVwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiR3VpbmVhLUJpc3NhdVwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiR3V5YW5hXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJIYWl0aVwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiSG9uZHVyYXNcIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIkh1bmdhcnlcIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIkljZWxhbmRcIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIkluZGlhXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJJbmRvbmVzaWFcIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIklyYW4tSXNsYW1pYy1SZXB1YmxpYy1vZlwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiSXJhcVwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiSXJlbGFuZFwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiSXNyYWVsXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJJdGFseVwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiSmFtYWljYVwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiSmFwYW5cIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIkpvcmRhblwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiS2F6YWtoc3RhblwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiS2VueWFcIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIkt1d2FpdFwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiS3lyZ3l6c3RhblwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiTGFvLVBlb3BsZXMtRGVtb2NyYXRpYy1SZXB1YmxpY1wiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiTGF0dmlhXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJMZWJhbm9uXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJMZXNvdGhvXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJMaWJlcmlhXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJMaWJ5YVwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiTGl0aHVhbmlhXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJMdXhlbWJvdXJnXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJNYWRhZ2FzY2FyXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJNYWxhd2lcIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIk1hbGF5c2lhXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJNYWxkaXZlc1wiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiTWFsaVwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiTWFsdGFcIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIk1hdXJpdGFuaWFcIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIk1hdXJpdGl1c1wiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiTWV4aWNvXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJNb25nb2xpYVwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiTW9yb2Njb1wiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiTW96YW1iaXF1ZVwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiTXlhbm1hclwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiTmFtaWJpYVwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiTmVwYWxcIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIk5ldGhlcmxhbmRzXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJOZXctWmVhbGFuZFwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiTmljYXJhZ3VhXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJOaWdlclwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiTmlnZXJpYVwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiTm9yd2F5XCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJPY2N1cGllZC1QYWxlc3Rpbmlhbi1UZXJyaXRvcnlcIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIk9tYW5cIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIlBha2lzdGFuXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJQYW5hbWFcIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIlBhcHVhLU5ldy1HdWluZWFcIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIlBhcmFndWF5XCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJQZXJ1XCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJQaGlsaXBwaW5lc1wiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiUG9sYW5kXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJQb3J0dWdhbFwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiUHVlcnRvLVJpY29cIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIlFhdGFyXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJSZXB1YmxpYy1vZi1Lb3JlYVwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiUmVwdWJsaWMtb2YtTW9sZG92YVwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiUm9tYW5pYVwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiUnVzc2lhbi1GZWRlcmF0aW9uXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJSd2FuZGFcIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIlNhaW50LUtpdHRzLWFuZC1OZXZpc1wiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiU2FpbnQtTHVjaWFcIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIlNhaW50LVZpbmNlbnQtYW5kLXRoZS1HcmVuYWRpbmVzXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJTYW8tVG9tZS1hbmQtUHJpbmNpcGVcIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIlNhdWRpLUFyYWJpYVwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiU2VuZWdhbFwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiU2VyYmlhXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJTaWVycmEtTGVvbmVcIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIlNsb3Zha2lhXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJTbG92ZW5pYVwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiU29tYWxpYVwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiU291dGgtQWZyaWNhXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJTb3V0aC1TdWRhblwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiU3BhaW5cIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIlNyaS1MYW5rYVwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiU3VkYW5cIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIlN1cmluYW1lXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJTd2F6aWxhbmRcIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIlN3ZWRlblwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiU3dpdHplcmxhbmRcIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIlN5cmlhbi1BcmFiLVJlcHVibGljXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJUYWppa2lzdGFuXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJUaGFpbGFuZFwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiVGhlLWZvcm1lci1ZdWdvc2xhdi1SZXB1YmxpYy1vZi1NYWNlZG9uaWFcIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIlRpbW9yLUxlc3RlXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJUb2dvXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJUcmluaWRhZCBhbmQgVG9iYWdvXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJUdW5pc2lhXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJUdXJrZXlcIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIlR1cmttZW5pc3RhblwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiVWdhbmRhXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJVa3JhaW5lXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJVbml0ZWQtQXJhYi1FbWlyYXRlc1wiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiVW5pdGVkLUtpbmdkb21cIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIlVuaXRlZC1SZXB1YmxpYy1vZi1UYW56YW5pYVwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiVW5pdGVkLVN0YXRlcy1vZi1BbWVyaWNhXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJVcnVndWF5XCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJVemJla2lzdGFuXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJWZW5lenVlbGEtQm9saXZhcmlhbi1SZXB1YmxpYy1vZlwiOiB7ZGlzcGxheTogZmFsc2V9LFxuICAgIFwiVmlldC1OYW1cIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIlllbWVuXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJaYW1iaWFcIjoge2Rpc3BsYXk6IGZhbHNlfSxcbiAgICBcIlppbWJhYndlXCI6IHtkaXNwbGF5OiBmYWxzZX0sXG4gICAgXCJHcmVlbmxhbmRcIjoge2Rpc3BsYXk6IGZhbHNlfVxufTtcblxuIl0sIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBWEE7QUFDQTtBQWFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFsTEEiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./scripts/variables.js\n");

/***/ })

/******/ });